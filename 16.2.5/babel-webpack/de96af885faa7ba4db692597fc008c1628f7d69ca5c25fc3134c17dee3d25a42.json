{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CurrencyFormatPipe {\n  transform(value, currencyCode) {\n    const formatedValue = Number(value).toLocaleString('pt-BR', {\n      style: 'currency',\n      currency: currencyCode,\n      minimumFractionDigits: 2\n    });\n    return null;\n  }\n  static #_ = this.ɵfac = function CurrencyFormatPipe_Factory(t) {\n    return new (t || CurrencyFormatPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"currencyFormat\",\n    type: CurrencyFormatPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["CurrencyFormatPipe","transform","value","currencyCode","formatedValue","Number","toLocaleString","style","currency","minimumFractionDigits","_","_2","pure"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\pipes\\currency-format.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'currencyFormat'\n})\nexport class CurrencyFormatPipe implements PipeTransform {\n\n  transform(value: string, currencyCode: string): unknown {\n    const formatedValue = Number(value).  toLocaleString('pt-BR',{\n      style: 'currency',\n      currency: currencyCode,\n      minimumFractionDigits:2,\n    })\n    return null;\n  }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,kBAAkB;EAE7BC,SAASA,CAACC,KAAa,EAAEC,YAAoB;IAC3C,MAAMC,aAAa,GAAGC,MAAM,CAACH,KAAK,CAAC,CAAGI,cAAc,CAAC,OAAO,EAAC;MAC3DC,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAEL,YAAY;MACtBM,qBAAqB,EAAC;KACvB,CAAC;IACF,OAAO,IAAI;EACb;EAAC,QAAAC,CAAA,G;qBATUV,kBAAkB;EAAA;EAAA,QAAAW,EAAA,G;;UAAlBX,kBAAkB;IAAAY,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}