{"ast":null,"code":"\"use strict\";\n\n// import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n// export function dateLessThanValidator(): ValidatorFn{\n//                                     // Retorna ou um erro ou um null - O null é justamente pra qndo nao tiver erros \n//     return (control: AbstractControl): ValidationErrors | null => {\n//         const [dd, mm, yyyy] = control.value.split('/')\n//         // Não sei pq o mês ta dando acima, mas pra resolver isso diminuí um aqui\n//         const inputDate = new Date(yyyy, mm-1, dd);\n//         const today = new Date;\n//         console.log(control.value)\n//         console.log(dd, mm, yyyy)\n//         console.log(inputDate)\n//         if(inputDate < today){\n//             return{dateLessThan: true};\n//             // console.log('VISH')\n//             // console.log(inputDate)\n//         }\n//         return null\n//     }\n// }\n// PADRAO PARA CRIAR VALIDAÇÕES\n// function dateLessThanValidator(): ValidatorFn{\n//     // Retorna ou um erro ou um null - O null é justamente pra qndo nao tiver erros \n// return (control: AbstractControl): ValidationErrors | null => {\n// console.log(control)\n// // const inputDate = new Date\n// return null\n// }\n// }","map":{"version":3,"names":[],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\validators\\dateLessThan.validator.ts"],"sourcesContent":["// import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\r\n\r\n\r\n// export function dateLessThanValidator(): ValidatorFn{\r\n//                                     // Retorna ou um erro ou um null - O null é justamente pra qndo nao tiver erros \r\n//     return (control: AbstractControl): ValidationErrors | null => {\r\n        \r\n//         const [dd, mm, yyyy] = control.value.split('/')\r\n//         // Não sei pq o mês ta dando acima, mas pra resolver isso diminuí um aqui\r\n//         const inputDate = new Date(yyyy, mm-1, dd);\r\n//         const today = new Date;\r\n\r\n//         console.log(control.value)\r\n//         console.log(dd, mm, yyyy)\r\n//         console.log(inputDate)\r\n\r\n//         if(inputDate < today){\r\n//             return{dateLessThan: true};\r\n//             // console.log('VISH')\r\n//             // console.log(inputDate)\r\n//         }\r\n\r\n//         return null\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// PADRAO PARA CRIAR VALIDAÇÕES\r\n// function dateLessThanValidator(): ValidatorFn{\r\n//     // Retorna ou um erro ou um null - O null é justamente pra qndo nao tiver erros \r\n// return (control: AbstractControl): ValidationErrors | null => {\r\n\r\n// console.log(control)\r\n// // const inputDate = new Date\r\n// return null\r\n// }\r\n// }"],"mappings":";;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}