{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class TaskFormReactiveComponent {\n  // Precisamos de um constructor para injetar uma dependencia, colocar um serviço aqui dentro\n  // \"formBuilder\" poderia ser qualquer nome.\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.form = this.formBuilder.group({\n      // o primeiro parametro é o valor inicial do meu input, deposi vêm meus validadores\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      date: ['', Validators.required],\n      select: ['toDO', Validators.required]\n      // Se tivesse mais um item que carrega um objeto, era so repetir a mesma estrutura. Ex:\n      // endereco: this.formBuilder.group({\n      //    rua: ['', Validators.required],\n      //    cidade: ['', Validators.required],\n      //    estado: ['', Validators.required],\n      // })\n    });\n\n    this.addTask = new EventEmitter();\n  }\n  submitTask() {\n    alert(this.form.value.title);\n    // this.addTask.emit(this.newTask);\n    // this.newTask = new Task();\n  }\n  static #_ = this.ɵfac = function TaskFormReactiveComponent_Factory(t) {\n    return new (t || TaskFormReactiveComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskFormReactiveComponent,\n    selectors: [[\"app-task-form-reactive\"]],\n    outputs: {\n      addTask: \"addTask\"\n    },\n    decls: 34,\n    vars: 1,\n    consts: [[1, \"d-flex\", \"justify-content-center\", \"mt-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"d-flex\"], [1, \"me-3\"], [\"for\", \"titulo\", 1, \"d-block\"], [\"id\", \"titulo\", \"type\", \"text\", \"name\", \"titulo\", \"formControlName\", \"title\", 1, \"h-25\", \"py-3\", \"rounded-2\", \"border-1\", \"ps-2\"], [1, \"mb-0\", \"text-danger\"], [\"for\", \"status\", 1, \"d-block\"], [\"id\", \"status\", \"name\", \"status\", 1, \"py-1\", \"rounded-2\", \"border-1\", \"ps-2\"], [\"disabled\", \"\", \"selected\", \"\"], [\"value\", \"toDO\"], [\"value\", \"doing\"], [\"value\", \"done\"], [\"for\", \"description\", 1, \"d-block\"], [\"id\", \"description\", \"name\", \"description\", 1, \"w-100\", \"rounded-2\", \"border-1\", \"ps-2\", \"py-2\", 2, \"resize\", \"none\"], [1, \"d-flex\", \"align-items-center\", \"mt-2\"], [\"for\", \"date\", 1, \"me-2\", \"w-50\"], [\"id\", \"date\", \"type\", \"date\", \"name\", \"date\", 1, \"rounded-2\", \"border-1\", \"py-2\", \"ps-2\", \"w-50\"], [1, \"text-end\", \"mt-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function TaskFormReactiveComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function TaskFormReactiveComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.submitTask();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"T\\u00EDtulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementStart(7, \"div\")(8, \"p\", 6);\n        i0.ɵɵtext(9, \"Nome obrigat\\u00F3rio\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"select\", 8)(14, \"option\", 9);\n        i0.ɵɵtext(15, \"Selecione uma op\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 10);\n        i0.ɵɵtext(17, \"toDo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 11);\n        i0.ɵɵtext(19, \"Doing\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 12);\n        i0.ɵɵtext(21, \"Done\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(22, \"div\")(23, \"label\", 13);\n        i0.ɵɵtext(24, \"Descri\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\");\n        i0.ɵɵelement(26, \"textarea\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 15)(28, \"label\", 16);\n        i0.ɵɵtext(29, \"Data de entrega da tarefa:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 18)(32, \"button\", 19);\n        i0.ɵɵtext(33, \"Adicionar Tarefa\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","Validators","TaskFormReactiveComponent","constructor","formBuilder","form","group","title","required","description","date","select","addTask","submitTask","alert","value","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","outputs","decls","vars","consts","template","TaskFormReactiveComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","TaskFormReactiveComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-form-reactive\\task-form-reactive.component.ts","C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-form-reactive\\task-form-reactive.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Task } from 'src/models/task.model';\n\n@Component({\n  selector: 'app-task-form-reactive',\n  templateUrl: './task-form-reactive.component.html',\n  styleUrls: ['./task-form-reactive.component.scss']\n})\nexport class TaskFormReactiveComponent {\n\n  public form: FormGroup = this.formBuilder.group({\n    // o primeiro parametro é o valor inicial do meu input, deposi vêm meus validadores\n    title: ['', Validators.required],\n    description: ['', Validators.required],\n    date: ['', Validators.required],\n    select: ['toDO', Validators.required],\n    // Se tivesse mais um item que carrega um objeto, era so repetir a mesma estrutura. Ex:\n    // endereco: this.formBuilder.group({\n    //    rua: ['', Validators.required],\n    //    cidade: ['', Validators.required],\n    //    estado: ['', Validators.required],\n    // })\n  })\n\n\n\n  @Output() addTask = new EventEmitter()\n\n\n  // Precisamos de um constructor para injetar uma dependencia, colocar um serviço aqui dentro\n  // \"formBuilder\" poderia ser qualquer nome.\n  constructor(private formBuilder: FormBuilder){}\n\n\n  submitTask(){\n    alert(this.form.value.title)\n    // this.addTask.emit(this.newTask);\n    // this.newTask = new Task();\n  }\n}\n","<div class=\"d-flex justify-content-center mt-4\">\n    <!-- vamos usar uma property binding -->\n    <!-- esse \"form\" é a variável publica que criamos no form-reactive.ts -->\n    <form [formGroup]=\"form\" (ngSubmit)=\"submitTask()\">\n        <!-- OPÇÂO SUBMIT2: passando um ngSubmit que é acionado qndo clica no submt do form e chama uma função -->\n\n        <div class=\"d-flex\">\n            <div class=\"me-3\">\n                <label for=\"titulo\" class=\"d-block\">Título</label>\n                <input \n                id=\"titulo\"\n                type=\"text\" \n                name=\"titulo\" \n                class=\"h-25 py-3 rounded-2 border-1 ps-2\"\n                formControlName=\"title\"\n                >\n                <div>\n                    <p class=\"mb-0 text-danger\">Nome obrigatório</p>\n                </div>\n\n            </div>\n            \n            <div>\n                <label for=\"status\" class=\"d-block\">Status</label>\n                <select \n                id=\"status\"\n                name=\"status\" \n                 class=\" py-1 rounded-2 border-1 ps-2\">\n                    <option disabled selected>Selecione uma opção</option>\n                    <option value=\"toDO\" >toDo</option>\n                    <option value=\"doing\" >Doing</option>\n                    <option value=\"done\" >Done</option>\n                </select>\n\n            </div>\n        </div>\n        <div>\n            <label for=\"description\" class=\"d-block\">Descrição</label>\n            <div><textarea  style=\"resize: none\" \n                id=\"description\"\n                name=\"description\" \n                class=\"w-100 rounded-2 border-1 ps-2 py-2\" \n                ></textarea></div>\n        </div>\n        <div class=\"d-flex align-items-center mt-2\">\n            <label for=\"date\" class=\"me-2 w-50\">Data de entrega da tarefa:</label>\n            <input \n            id=\"date\" \n            type=\"date\" \n            name=\"date\" \n            class=\"rounded-2 border-1 py-2 ps-2 w-50\">           \n        </div>           \n        <div class=\"text-end mt-4\">\n            <!-- OPÇÂO SUBMIT 1:  chamando a função por um click -->\n            <!-- <button type=\"button\" (click)=\"submitTask()\" class=\"btn btn-primary\" >Adicionar Tarefa</button> -->\n            <button type=\"submit\"  class=\"btn btn-primary\" >Adicionar Tarefa</button>\n        </div>\n    </form>\n</div>"],"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;AAC/D,SAAiCC,UAAU,QAAQ,gBAAgB;;;AAQnE,OAAM,MAAOC,yBAAyB;EAqBpC;EACA;EACAC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IArBxB,KAAAC,IAAI,GAAc,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MAC9C;MACAC,KAAK,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MAChCC,WAAW,EAAE,CAAC,EAAE,EAAER,UAAU,CAACO,QAAQ,CAAC;MACtCE,IAAI,EAAE,CAAC,EAAE,EAAET,UAAU,CAACO,QAAQ,CAAC;MAC/BG,MAAM,EAAE,CAAC,MAAM,EAAEV,UAAU,CAACO,QAAQ;MACpC;MACA;MACA;MACA;MACA;MACA;KACD,CAAC;;IAIQ,KAAAI,OAAO,GAAG,IAAIZ,YAAY,EAAE;EAKQ;EAG9Ca,UAAUA,CAAA;IACRC,KAAK,CAAC,IAAI,CAACT,IAAI,CAACU,KAAK,CAACR,KAAK,CAAC;IAC5B;IACA;EACF;EAAC,QAAAS,CAAA,G;qBA9BUd,yBAAyB,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAzBnB,yBAAyB;IAAAoB,SAAA;IAAAC,OAAA;MAAAX,OAAA;IAAA;IAAAY,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTtCZ,EAAA,CAAAc,cAAA,aAAgD;QAGnBd,EAAA,CAAAe,UAAA,sBAAAC,4DAAA;UAAA,OAAYH,GAAA,CAAAjB,UAAA,EAAY;QAAA,EAAC;QAG9CI,EAAA,CAAAc,cAAA,aAAoB;QAEwBd,EAAA,CAAAiB,MAAA,kBAAM;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAClDlB,EAAA,CAAAmB,SAAA,eAMC;QACDnB,EAAA,CAAAc,cAAA,UAAK;QAC2Bd,EAAA,CAAAiB,MAAA,4BAAgB;QAAAjB,EAAA,CAAAkB,YAAA,EAAI;QAKxDlB,EAAA,CAAAc,cAAA,WAAK;QACmCd,EAAA,CAAAiB,MAAA,cAAM;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAClDlB,EAAA,CAAAc,cAAA,iBAGuC;QACTd,EAAA,CAAAiB,MAAA,qCAAmB;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;QACtDlB,EAAA,CAAAc,cAAA,kBAAsB;QAAAd,EAAA,CAAAiB,MAAA,YAAI;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;QACnClB,EAAA,CAAAc,cAAA,kBAAuB;QAAAd,EAAA,CAAAiB,MAAA,aAAK;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;QACrClB,EAAA,CAAAc,cAAA,kBAAsB;QAAAd,EAAA,CAAAiB,MAAA,YAAI;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;QAK/ClB,EAAA,CAAAc,cAAA,WAAK;QACwCd,EAAA,CAAAiB,MAAA,2BAAS;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAC1DlB,EAAA,CAAAc,cAAA,WAAK;QAAAd,EAAA,CAAAmB,SAAA,oBAIW;QAAAnB,EAAA,CAAAkB,YAAA,EAAM;QAE1BlB,EAAA,CAAAc,cAAA,eAA4C;QACJd,EAAA,CAAAiB,MAAA,kCAA0B;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QACtElB,EAAA,CAAAmB,SAAA,iBAI0C;QAC9CnB,EAAA,CAAAkB,YAAA,EAAM;QACNlB,EAAA,CAAAc,cAAA,eAA2B;QAGyBd,EAAA,CAAAiB,MAAA,wBAAgB;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;;;QApD3ElB,EAAA,CAAAoB,SAAA,GAAkB;QAAlBpB,EAAA,CAAAqB,UAAA,cAAAR,GAAA,CAAAzB,IAAA,CAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}