{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor() {\n    // um array de IListTasks (Array de objetos) >>> IListTask[] \n    // essa \"Task\" é a minha model task.model.ts\n    // A gente inicia assim qndo é um array. Quando for um objeto inicia assim: selectedTask = new Task() (linha 41)\n    this.listTask = [];\n    // listTaskComplet:IListComplet[] = []\n    this.isVisible = true;\n    // ANTES ESSA VARIAVEL ERA CRIADA ASSIM, MAS DEPOIS Q USAMOS MODEL PASSAMOS COMO \"new Model()\"\"\n    // selectedTask: Task | null = null;   \n    // Variável criada. O valor dela é passado no 'handleTask'\n    // Essa new Task () é a minha model. Lá ja foiram passados os argumentos dentro do constructor\n    // INICIANDO COMO NULL, JS RESOLVE O PROBLEMA DO FECHARDETALHES()\n    this.selectedTask = null;\n    // Variavel do tipo Task Array para receber as tasks por push \n    this.listTaskToTable = [];\n    this.diretiveNumber = 25;\n    console.log('constructor');\n  }\n  ngOnInit() {\n    console.log('INICIEI APP');\n    this.listTask.push({\n      date: new Date(),\n      description: 'tarefa adicionada pelo metodo OnInit',\n      title: 'Tarefa OnInit',\n      status: 'toDO'\n    });\n  }\n  remover() {}\n  onAddTask(task) {\n    // console.log(task)\n    // na lista de tasks vai ser adicionada uma nova task. Essa nova task é a task enviada pelo form\n    this.listTask.push(task);\n    // this.listTask.push(new Task(task));\n  }\n\n  mostrarLista() {\n    this.isVisible = !this.isVisible;\n  }\n  //  Aqui a variável \"selectedTask\" recebe um valor\n  //  recebe uma task e passa essa task para a variavel selectedTask (essa variavel vai no app.html)\n  //  Quando clicar no ngFor (app.html) vai passar o valor da task (task of tasks) para a função handle e receber aqui\n  handleTaskApp(task) {\n    this.selectedTask = task;\n    // alem de selecionar a task, vou dar um PUSH para a lista da TABELA\n    this.listTaskToTable.push(task);\n  }\n  fecharDetalhes() {\n    // QNDO REFATOROU USANDO MODEL, PRECISOU MUDAR ESSA LINHA PQ A TASK NAO PODIA SER NULA\n    this.selectedTask = null;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","listTask","isVisible","selectedTask","listTaskToTable","diretiveNumber","console","log","ngOnInit","push","date","Date","description","title","status","remover","onAddTask","task","mostrarLista","handleTaskApp","fecharDetalhes","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Task } from 'src/models/task.model';\n\n\n// ANTERIORMENTE, NESSA PARTE, FOI FEITA UMA INTERFACE, MAS REFATORANDO FOI CRIADA UMA MODEL TASK. (task.model.ts)\n// // cria um \"modelo\" pro nosso objeto\n// export interface IListTask {\n//   title: string;\n//   description: string;\n//   date: Date;\n// }\n\n// // Recebe todo o modelo da IListTask + o status\n// export interface IListComplet extends IListTask{\n//   status: boolean;\n// }\n\nexport declare interface Remover{\n  remover():void;\n} \n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, Remover{\n  // um array de IListTasks (Array de objetos) >>> IListTask[] \n  // essa \"Task\" é a minha model task.model.ts\n  // A gente inicia assim qndo é um array. Quando for um objeto inicia assim: selectedTask = new Task() (linha 41)\n  listTask: Task[] = [];\n  // listTaskComplet:IListComplet[] = []\n\n  isVisible = true;\n\n  // ANTES ESSA VARIAVEL ERA CRIADA ASSIM, MAS DEPOIS Q USAMOS MODEL PASSAMOS COMO \"new Model()\"\"\n  // selectedTask: Task | null = null;   \n\n  // Variável criada. O valor dela é passado no 'handleTask'\n  // Essa new Task () é a minha model. Lá ja foiram passados os argumentos dentro do constructor\n  // INICIANDO COMO NULL, JS RESOLVE O PROBLEMA DO FECHARDETALHES()\n  selectedTask: Task | null = null;\n\n  // Variavel do tipo Task Array para receber as tasks por push \n  listTaskToTable: Task[] = [];\n\n\n  diretiveNumber = 25\n\n  constructor(){\n    console.log('constructor')\n  }\n\n\n  ngOnInit(){\n    console.log('INICIEI APP')\n    this.listTask.push({\n      date: new Date(),\n      description: 'tarefa adicionada pelo metodo OnInit',\n      title: 'Tarefa OnInit',\n      status: 'toDO'\n    })\n  }\n\n  remover(): void {}\n\n  onAddTask(task: Task) {\n    // console.log(task)\n  // na lista de tasks vai ser adicionada uma nova task. Essa nova task é a task enviada pelo form\n    this.listTask.push(task)\n    // this.listTask.push(new Task(task));\n  }\n\n  mostrarLista(){\n    this.isVisible = !this.isVisible;\n  }\n\n  //  Aqui a variável \"selectedTask\" recebe um valor\n  //  recebe uma task e passa essa task para a variavel selectedTask (essa variavel vai no app.html)\n  //  Quando clicar no ngFor (app.html) vai passar o valor da task (task of tasks) para a função handle e receber aqui\n  handleTaskApp(task: Task){\n    this.selectedTask = task;\n\n    // alem de selecionar a task, vou dar um PUSH para a lista da TABELA\n    this.listTaskToTable.push(task)\n  }\n \n  \n  fecharDetalhes() {\n    // QNDO REFATOROU USANDO MODEL, PRECISOU MUDAR ESSA LINHA PQ A TASK NAO PODIA SER NULA\n    this.selectedTask = null;\n  }\n\n \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AA2BrD,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAuBvBC,YAAA;IAtBA;IACA;IACA;IACA,KAAAC,QAAQ,GAAW,EAAE;IACrB;IAEA,KAAAC,SAAS,GAAG,IAAI;IAEhB;IACA;IAEA;IACA;IACA;IACA,KAAAC,YAAY,GAAgB,IAAI;IAEhC;IACA,KAAAC,eAAe,GAAW,EAAE;IAG5B,KAAAC,cAAc,GAAG,EAAE;IAGjBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B;EAGAC,QAAQA,CAAA;IACNF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,IAAI,CAACN,QAAQ,CAACQ,IAAI,CAAC;MACjBC,IAAI,EAAE,IAAIC,IAAI,EAAE;MAChBC,WAAW,EAAE,sCAAsC;MACnDC,KAAK,EAAE,eAAe;MACtBC,MAAM,EAAE;KACT,CAAC;EACJ;EAEAC,OAAOA,CAAA,GAAU;EAEjBC,SAASA,CAACC,IAAU;IAClB;IACF;IACE,IAAI,CAAChB,QAAQ,CAACQ,IAAI,CAACQ,IAAI,CAAC;IACxB;EACF;;EAEAC,YAAYA,CAAA;IACV,IAAI,CAAChB,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;EAClC;EAEA;EACA;EACA;EACAiB,aAAaA,CAACF,IAAU;IACtB,IAAI,CAACd,YAAY,GAAGc,IAAI;IAExB;IACA,IAAI,CAACb,eAAe,CAACK,IAAI,CAACQ,IAAI,CAAC;EACjC;EAGAG,cAAcA,CAAA;IACZ;IACA,IAAI,CAACjB,YAAY,GAAG,IAAI;EAC1B;CAGD;AApEYJ,YAAY,GAAAsB,UAAA,EALxBvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWzB,YAAY,CAoExB"},"metadata":{},"sourceType":"module","externalDependencies":[]}