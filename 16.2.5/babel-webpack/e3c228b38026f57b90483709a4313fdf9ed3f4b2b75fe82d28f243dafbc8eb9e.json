{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../directives/date-warning.directive\";\nimport * as i3 from \"../task-filter/task-filter.component\";\nfunction TaskListComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"h5\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 15);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r5.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Data de entrega: \", i0.ɵɵpipeBind2(5, 3, task_r5.date, \"dd/MM\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r5.description);\n  }\n}\nfunction TaskListComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TaskListComponent_div_10_div_1_Template, 8, 6, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r5.status == \"toDO\");\n  }\n}\nfunction TaskListComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"h5\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 15);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r8.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Data de entrega: \", i0.ɵɵpipeBind2(5, 3, task_r8.date, \"dd/MM\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r8.description);\n  }\n}\nfunction TaskListComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TaskListComponent_div_15_div_1_Template, 8, 6, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r8.status == \"doing\");\n  }\n}\nfunction TaskListComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"h5\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 15);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r11.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Data de entrega: \", i0.ɵɵpipeBind2(5, 3, task_r11.date, \"dd/MM\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r11.description);\n  }\n}\nfunction TaskListComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TaskListComponent_div_20_div_1_Template, 8, 6, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r11.status == \"done\");\n  }\n}\nfunction TaskListComponent_ng_container_24_ng_container_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h5\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 15);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r16 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r16.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Data de entrega: \", i0.ɵɵpipeBind2(5, 3, task_r16.date, \"dd/MM\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r16.description);\n  }\n}\nfunction TaskListComponent_ng_container_24_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TaskListComponent_ng_container_24_ng_container_3_div_1_Template, 8, 6, \"div\", 17);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r16 = ctx.$implicit;\n    const titulo_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r16.status == titulo_r14);\n  }\n}\nfunction TaskListComponent_ng_container_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 16);\n    i0.ɵɵelementStart(1, \"h3\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TaskListComponent_ng_container_24_ng_container_3_Template, 2, 1, \"ng-container\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const titulo_r14 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(titulo_r14);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.tasks);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"d-none\": a0\n  };\n};\nfunction TaskListComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_26_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const task_r20 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.selectedTask(task_r20));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"slice\");\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, task_r20.title === \"teste\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"task\", task_r20);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r20.title, \" - \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", i0.ɵɵpipeBind3(4, 6, task_r20.description, 0, 4), \" - \", i0.ɵɵpipeBind2(5, 10, task_r20.date, \"dd/MM/yy\"), \" - \", task_r20.status, \" \");\n  }\n}\nconst _c1 = function () {\n  return [\"toDO\", \"doing\", \"done\"];\n};\nexport class TaskListComponent {\n  constructor() {\n    // esses são os parâmetros quee será enviados para os componentes (mandar por import)\n    // a variável 'tasks' é do tipo 'IListTasks\n    // Esse tipo (IListTasks) foi definido e exportado do app.ts\n    this.tasks = [];\n    // Mandando a informação\n    this.handleTask = new EventEmitter();\n    this.tasksFiltradas = [];\n  }\n  teste() {\n    console.log(this.tasks);\n  }\n  // Quando Inicia ESSA aplicação. O task-list\n  ngOnInit() {\n    console.log('Iniciou o task-list');\n    // AQUI FOI PRA MOSTRAR QUE INICI ASSIM Q RODA O COMPONENTE\n    // E PARA PARAR A CONTAGEM, POR EXEMPLO, PRECISARIA RODAR O DESTROY\n    // this.interval = setInterval(() => {\n    //   console.log('segundos');\n    // },1000)\n    // Como minhas tasks filtradas tão inicializando vazias, vou iniciar ja mostrando. Já passando o filtro\n    // this.handleFilter('all')\n    this.tasksFiltradas = this.tasks;\n  }\n  ngOnDestroy() {\n    console.log('Fechou o task-list');\n    // clearInterval(this.interval)\n  }\n\n  selectedTask(task) {\n    // mandando a task (emitindo a task)\n    //  vai dizer \"ei, vc foi clicado\"\n    this.handleTask.emit(task);\n  }\n  handleFilter(filter) {\n    if (filter === 'all') {\n      this.tasksFiltradas = this.tasks;\n      console.log(this.tasksFiltradas);\n      return;\n    }\n    this.tasksFiltradas = this.tasks.filter(item => {\n      if (item.status === filter) {\n        return item;\n      }\n      return;\n    });\n    console.log(this.tasksFiltradas);\n  }\n  static #_ = this.ɵfac = function TaskListComponent_Factory(t) {\n    return new (t || TaskListComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskListComponent,\n    selectors: [[\"app-task-list\"]],\n    inputs: {\n      tasks: \"tasks\"\n    },\n    outputs: {\n      handleTask: \"handleTask\"\n    },\n    decls: 31,\n    vars: 6,\n    consts: [[1, \"text-center\", \"d-flex\", \"align-content-center\", \"justify-content-center\"], [1, \"bg-warning\", \"w-100\", \"mx-5\", \"mb-4\"], [1, \"container\", \"d-grid\"], [1, \"row\"], [1, \"col\"], [1, \"bg-dark\", \"text-warning\", \"text-center\", \"mb-3\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"\", 4, \"ngFor\", \"ngForOf\"], [3, \"onChangeFilter\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"class\", \"card py-2 ps-2 mb-2\", 4, \"ngIf\"], [1, \"card\", \"py-2\", \"ps-2\", \"mb-2\"], [1, \"mb-0\"], [1, \"my-0\"], [1, \"mt-0\", \"fs-6\", \"fw-light\"], [1, \"\"], [4, \"ngIf\"], [3, \"ngClass\"], [\"appDateWarning\", \"\", 3, \"task\", \"click\"]],\n    template: function TaskListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"h2\", 1);\n        i0.ɵɵtext(3, \"Tarefas\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"div\")(8, \"h3\", 5);\n        i0.ɵɵtext(9, \"A fazer\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(10, TaskListComponent_div_10_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 4)(12, \"div\")(13, \"h3\", 5);\n        i0.ɵɵtext(14, \"Fazendo\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, TaskListComponent_div_15_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 4)(17, \"div\")(18, \"h3\", 5);\n        i0.ɵɵtext(19, \"Feito\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, TaskListComponent_div_20_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"h1\");\n        i0.ɵɵtext(22, \"ng container\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 2);\n        i0.ɵɵtemplate(24, TaskListComponent_ng_container_24_Template, 4, 2, \"ng-container\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"app-task-filter\", 8);\n        i0.ɵɵlistener(\"onChangeFilter\", function TaskListComponent_Template_app_task_filter_onChangeFilter_25_listener($event) {\n          return ctx.handleFilter($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, TaskListComponent_div_26_Template, 6, 15, \"div\", 9);\n        i0.ɵɵelementStart(27, \"div\");\n        i0.ɵɵelement(28, \"p\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_29_listener() {\n          return ctx.teste();\n        });\n        i0.ɵɵtext(30, \"Mostrar Console\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(5, _c1));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasksFiltradas);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.DateWarningDirective, i3.TaskFilterComponent, i1.SlicePipe, i1.DatePipe],\n    styles: [\".d-none[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrLWxpc3QvdGFzay1saXN0LmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vLi4vLi4vTWV1JTIwRHJpdmUvYWRhL1NhbnRhbmRlcl9Db2RlcnNfMjAyM19Gcm9udC1FbmQvMDUtQW5ndWxhci1JL2F1bGEwMi90b0xpc3Qvc3JjL2FwcC9jb21wb25lbnRzL3Rhc2stbGlzdC90YXNrLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FDQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuZC1ub25le1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufSIsIi5kLW5vbmUge1xuICBkaXNwbGF5OiBub25lO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","task_r5","title","ɵɵtextInterpolate1","ɵɵpipeBind2","date","description","ɵɵtemplate","TaskListComponent_div_10_div_1_Template","ɵɵproperty","status","task_r8","TaskListComponent_div_15_div_1_Template","task_r11","TaskListComponent_div_20_div_1_Template","task_r16","ɵɵelementContainerStart","TaskListComponent_ng_container_24_ng_container_3_div_1_Template","ɵɵelementContainerEnd","titulo_r14","TaskListComponent_ng_container_24_ng_container_3_Template","ctx_r3","tasks","ɵɵlistener","TaskListComponent_div_26_Template_div_click_1_listener","restoredCtx","ɵɵrestoreView","_r22","task_r20","$implicit","ctx_r21","ɵɵnextContext","ɵɵresetView","selectedTask","ɵɵpureFunction1","_c0","ɵɵtextInterpolate3","ɵɵpipeBind3","TaskListComponent","constructor","handleTask","tasksFiltradas","teste","console","log","ngOnInit","ngOnDestroy","task","emit","handleFilter","filter","item","_","_2","selectors","inputs","outputs","decls","vars","consts","template","TaskListComponent_Template","rf","ctx","TaskListComponent_div_10_Template","TaskListComponent_div_15_Template","TaskListComponent_div_20_Template","TaskListComponent_ng_container_24_Template","TaskListComponent_Template_app_task_filter_onChangeFilter_25_listener","$event","TaskListComponent_div_26_Template","ɵɵelement","TaskListComponent_Template_button_click_29_listener","ɵɵpureFunction0","_c1"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-list\\task-list.component.ts","C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-list\\task-list.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n// import { IListTask } from 'src/app/app.component';\nimport { Task } from 'src/models/task.model';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss']\n})\nexport class TaskListComponent implements OnInit, OnDestroy {\n  // esses são os parâmetros quee será enviados para os componentes (mandar por import)\n  // a variável 'tasks' é do tipo 'IListTasks\n  // Esse tipo (IListTasks) foi definido e exportado do app.ts\n  @ Input() tasks: Task[] = [];\n  // Mandando a informação\n  @Output() handleTask = new EventEmitter();\n\n\n  tasksFiltradas: Task[] = [];\n\n  interval: any;\n  \n  teste(){\n    console.log(this.tasks)\n  }\n\n  // Quando Inicia ESSA aplicação. O task-list\n  ngOnInit(){\n    console.log('Iniciou o task-list')\n\n    // AQUI FOI PRA MOSTRAR QUE INICI ASSIM Q RODA O COMPONENTE\n    // E PARA PARAR A CONTAGEM, POR EXEMPLO, PRECISARIA RODAR O DESTROY\n    // this.interval = setInterval(() => {\n    //   console.log('segundos');\n    // },1000)\n\n    // Como minhas tasks filtradas tão inicializando vazias, vou iniciar ja mostrando. Já passando o filtro\n    // this.handleFilter('all')\n    this.tasksFiltradas = this.tasks\n  }\n\n  ngOnDestroy(): void {\n    console.log('Fechou o task-list')\n    // clearInterval(this.interval)\n  }\n\n  selectedTask(task: Task){\n    // mandando a task (emitindo a task)\n    //  vai dizer \"ei, vc foi clicado\"\n    this.handleTask.emit(task)\n  }\n\n  handleFilter(filter:string){\n    if(filter === 'all'){\n      this.tasksFiltradas = this.tasks;\n      console.log(this.tasksFiltradas)\n      return;\n    }\n    this.tasksFiltradas = this.tasks.filter(item => {\n      if(item.status === filter){\n        return item;\n      }\n      return\n    })\n\n    console.log(this.tasksFiltradas)\n  }\n\n\n\n}\n","\n\n<div>\n    <div class=\"text-center d-flex align-content-center justify-content-center\">\n        <h2 class=\"bg-warning w-100 mx-5 mb-4\">Tarefas</h2>\n    </div>\n\n\n    <div class=\"container d-grid\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <div><h3 class=\"bg-dark text-warning text-center mb-3\">A fazer</h3></div>\n                <div *ngFor=\"let task of tasks\">\n                    <div *ngIf=\"task.status == 'toDO'\" class=\"card py-2 ps-2 mb-2\">\n                        <h5 class=\"mb-0\">{{task.title}}</h5>\n                        <p class=\"my-0\">Data de entrega: {{task.date | date:'dd/MM'}}</p>\n                        <p class=\"mt-0 fs-6 fw-light\">{{task.description}}</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col\">\n                <div><h3 class=\"bg-dark text-warning text-center mb-3\">Fazendo</h3></div>\n                <div *ngFor=\"let task of tasks\">\n                    <div *ngIf=\"task.status == 'doing'\" class=\"card py-2 ps-2 mb-2\">\n                        <h5 class=\"mb-0\">{{task.title}}</h5>\n                        <p class=\"my-0\">Data de entrega: {{task.date | date:'dd/MM'}}</p>\n                        <p class=\"mt-0 fs-6 fw-light\">{{task.description}}</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col\">\n                <div><h3 class=\"bg-dark text-warning text-center mb-3\">Feito</h3></div>\n                <div *ngFor=\"let task of tasks\">\n                    <div *ngIf=\"task.status == 'done'\" class=\"card py-2 ps-2 mb-2\">\n                        <h5 class=\"mb-0\">{{task.title}}</h5>\n                        <p class=\"my-0\">Data de entrega: {{task.date | date:'dd/MM'}}</p>\n                        <p class=\"mt-0 fs-6 fw-light\">{{task.description}}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    \n\n\n    <h1>ng container</h1>\n    <div class=\"container d-grid\">\n        <ng-container *ngFor=\"let titulo of ['toDO', 'doing', 'done']\" class=\"\">\n            <h3 class=\"bg-dark text-warning text-center mb-3\">{{titulo}}</h3>\n            <ng-container *ngFor=\"let task of tasks\">\n                <div *ngIf=\"task.status == titulo\">\n                    <h5 class=\"mb-0\">{{task.title}}</h5>\n                    <p class=\"my-0\">Data de entrega: {{task.date | date:'dd/MM'}}</p>\n                    <p class=\"mt-0 fs-6 fw-light\">{{task.description}}</p>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n\n\n\n\n\n    \n    <!-- onChangeFilter é a variavel q eu dei OUTPUT no meu filter.ts -->\n    <app-task-filter (onChangeFilter)=\"handleFilter($event)\"></app-task-filter>\n    <div *ngFor=\"let task of tasksFiltradas\"   [ngClass]=\"{'d-none': task.title === 'teste'}\">\n        <div appDateWarning [task] = task (click)=\"selectedTask(task)\">\n            {{task.title}} - \n            <!-- {{task.title | currencyFormat: 'BRL' }} -  -->\n            <!-- BRL USD  -->\n            {{task.description | slice: 0:4 }} - \n            {{task.date | date:'dd/MM/yy'}} -\n            {{task.status}} \n            <!--  COMO FAZER UM IF  -->\n            <!-- <div *ngIf=\"task.title !== 'teste'\">\n                {{task.title}} - {{task.description}} - {{task.date}}\n            </div> -->\n        </div>\n    </div>\n\n    <div>\n        <p></p>\n    </div>\n\n</div>\n\n<!--   (evento) = \"função()\"\"        -->\n<button (click)=\"teste()\">Mostrar Console</button>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}