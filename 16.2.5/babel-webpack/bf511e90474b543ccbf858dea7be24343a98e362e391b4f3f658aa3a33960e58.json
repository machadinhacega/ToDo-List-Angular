{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../directives/date-warning.directive\";\nimport * as i3 from \"../task-filter/task-filter.component\";\nconst _c0 = function (a0) {\n  return {\n    \"d-none\": a0\n  };\n};\nfunction TaskListComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_21_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectedTask(task_r1));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"slice\");\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, task_r1.title === \"teste\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"task\", task_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.title, \" - \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", i0.ɵɵpipeBind3(4, 6, task_r1.description, 0, 4), \" - \", i0.ɵɵpipeBind2(5, 10, task_r1.date, \"dd/MM/yy\"), \" - \", task_r1.status, \" \");\n  }\n}\nexport class TaskListComponent {\n  constructor() {\n    // esses são os parâmetros quee será enviados para os componentes (mandar por import)\n    // a variável 'tasks' é do tipo 'IListTasks\n    // Esse tipo (IListTasks) foi definido e exportado do app.ts\n    this.tasks = [];\n    // Mandando a informação\n    this.handleTask = new EventEmitter();\n    this.tasksFiltradas = [];\n  }\n  teste() {\n    console.log(this.tasks);\n  }\n  // Quando Inicia ESSA aplicação. O task-list\n  ngOnInit() {\n    console.log('Iniciou o task-list');\n    // AQUI FOI PRA MOSTRAR QUE INICI ASSIM Q RODA O COMPONENTE\n    // E PARA PARAR A CONTAGEM, POR EXEMPLO, PRECISARIA RODAR O DESTROY\n    // this.interval = setInterval(() => {\n    //   console.log('segundos');\n    // },1000)\n    // Como minhas tasks filtradas tão inicializando vazias, vou iniciar ja mostrando. Já passando o filtro\n    // this.handleFilter('all')\n    this.tasksFiltradas = this.tasks;\n  }\n  ngOnDestroy() {\n    console.log('Fechou o task-list');\n    // clearInterval(this.interval)\n  }\n\n  selectedTask(task) {\n    // mandando a task (emitindo a task)\n    //  vai dizer \"ei, vc foi clicado\"\n    this.handleTask.emit(task);\n  }\n  handleFilter(filter) {\n    if (filter === 'all') {\n      this.tasksFiltradas = this.tasks;\n      console.log(this.tasksFiltradas);\n      return;\n    }\n    this.tasksFiltradas = this.tasks.filter(item => {\n      if (item.status === filter) {\n        return item;\n      }\n      return;\n    });\n    console.log(this.tasksFiltradas);\n  }\n  static #_ = this.ɵfac = function TaskListComponent_Factory(t) {\n    return new (t || TaskListComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskListComponent,\n    selectors: [[\"app-task-list\"]],\n    inputs: {\n      tasks: \"tasks\"\n    },\n    outputs: {\n      handleTask: \"handleTask\"\n    },\n    decls: 26,\n    vars: 1,\n    consts: [[3, \"onChangeFilter\"], [1, \"container\", \"d-grid\"], [1, \"row\"], [1, \"col\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"ngClass\"], [\"appDateWarning\", \"\", 3, \"task\", \"click\"]],\n    template: function TaskListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Tarefas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"app-task-filter\", 0);\n        i0.ɵɵlistener(\"onChangeFilter\", function TaskListComponent_Template_app_task_filter_onChangeFilter_3_listener($event) {\n          return ctx.handleFilter($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"div\", 3)(7, \"div\")(8, \"h3\");\n        i0.ɵɵtext(9, \"A fazer\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(10, \"div\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3)(12, \"div\")(13, \"h3\");\n        i0.ɵɵtext(14, \"Fazendo\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"div\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 3)(17, \"div\")(18, \"h3\");\n        i0.ɵɵtext(19, \"Feito\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(20, \"div\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(21, TaskListComponent_div_21_Template, 6, 15, \"div\", 4);\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵelement(23, \"p\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_24_listener() {\n          return ctx.teste();\n        });\n        i0.ɵɵtext(25, \"Mostrar Console\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasksFiltradas);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i2.DateWarningDirective, i3.TaskFilterComponent, i1.SlicePipe, i1.DatePipe],\n    styles: [\".d-none[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrLWxpc3QvdGFzay1saXN0LmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vLi4vLi4vTWV1JTIwRHJpdmUvYWRhL1NhbnRhbmRlcl9Db2RlcnNfMjAyM19Gcm9udC1FbmQvMDUtQW5ndWxhci1JL2F1bGEwMi90b0xpc3Qvc3JjL2FwcC9jb21wb25lbnRzL3Rhc2stbGlzdC90YXNrLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FDQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuZC1ub25le1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufSIsIi5kLW5vbmUge1xuICBkaXNwbGF5OiBub25lO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","TaskListComponent_div_21_Template_div_click_1_listener","restoredCtx","ɵɵrestoreView","_r3","task_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","selectedTask","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","title","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate3","ɵɵpipeBind3","description","ɵɵpipeBind2","date","status","TaskListComponent","constructor","tasks","handleTask","tasksFiltradas","teste","console","log","ngOnInit","ngOnDestroy","task","emit","handleFilter","filter","item","_","_2","selectors","inputs","outputs","decls","vars","consts","template","TaskListComponent_Template","rf","ctx","TaskListComponent_Template_app_task_filter_onChangeFilter_3_listener","$event","ɵɵelement","ɵɵtemplate","TaskListComponent_div_21_Template","TaskListComponent_Template_button_click_24_listener"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-list\\task-list.component.ts","C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-list\\task-list.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n// import { IListTask } from 'src/app/app.component';\nimport { Task } from 'src/models/task.model';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss']\n})\nexport class TaskListComponent implements OnInit, OnDestroy {\n  // esses são os parâmetros quee será enviados para os componentes (mandar por import)\n  // a variável 'tasks' é do tipo 'IListTasks\n  // Esse tipo (IListTasks) foi definido e exportado do app.ts\n  @ Input() tasks: Task[] = [];\n  // Mandando a informação\n  @Output() handleTask = new EventEmitter();\n\n\n  tasksFiltradas: Task[] = [];\n\n  interval: any;\n  \n  teste(){\n    console.log(this.tasks)\n  }\n\n  // Quando Inicia ESSA aplicação. O task-list\n  ngOnInit(){\n    console.log('Iniciou o task-list')\n\n    // AQUI FOI PRA MOSTRAR QUE INICI ASSIM Q RODA O COMPONENTE\n    // E PARA PARAR A CONTAGEM, POR EXEMPLO, PRECISARIA RODAR O DESTROY\n    // this.interval = setInterval(() => {\n    //   console.log('segundos');\n    // },1000)\n\n    // Como minhas tasks filtradas tão inicializando vazias, vou iniciar ja mostrando. Já passando o filtro\n    // this.handleFilter('all')\n    this.tasksFiltradas = this.tasks\n  }\n\n  ngOnDestroy(): void {\n    console.log('Fechou o task-list')\n    // clearInterval(this.interval)\n  }\n\n  selectedTask(task: Task){\n    // mandando a task (emitindo a task)\n    //  vai dizer \"ei, vc foi clicado\"\n    this.handleTask.emit(task)\n  }\n\n  handleFilter(filter:string){\n    if(filter === 'all'){\n      this.tasksFiltradas = this.tasks;\n      console.log(this.tasksFiltradas)\n      return;\n    }\n    this.tasksFiltradas = this.tasks.filter(item => {\n      if(item.status === filter){\n        return item;\n      }\n      return\n    })\n\n    console.log(this.tasksFiltradas)\n  }\n\n\n\n}\n","\n\n<div>\n    <h2>Tarefas</h2>\n    <!-- onChangeFilter é a variavel q eu dei OUTPUT no meu filter.ts -->\n    <app-task-filter (onChangeFilter)=\"handleFilter($event)\"></app-task-filter>\n\n    <div class=\"container d-grid\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <div><h3>A fazer</h3></div>\n                <div></div>\n            </div>\n            <div class=\"col\">\n                <div><h3>Fazendo</h3></div>\n                <div></div>\n            </div>\n            <div class=\"col\">\n                <div><h3>Feito</h3></div>\n                <div></div>\n            </div>\n        </div>\n    </div>\n\n\n    <div *ngFor=\"let task of tasksFiltradas\"   [ngClass]=\"{'d-none': task.title === 'teste'}\">\n        <div appDateWarning [task] = task (click)=\"selectedTask(task)\">\n            {{task.title}} - \n            <!-- {{task.title | currencyFormat: 'BRL' }} -  -->\n            <!-- BRL USD  -->\n            {{task.description | slice: 0:4 }} - \n            {{task.date | date:'dd/MM/yy'}} -\n            {{task.status}} \n            <!--  COMO FAZER UM IF  -->\n            <!-- <div *ngIf=\"task.title !== 'teste'\">\n                {{task.title}} - {{task.description}} - {{task.date}}\n            </div> -->\n        </div>\n    </div>\n\n    <div>\n        <p></p>\n    </div>\n\n</div>\n\n<!--   (evento) = \"função()\"\"        -->\n<button (click)=\"teste()\">Mostrar Console</button>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}