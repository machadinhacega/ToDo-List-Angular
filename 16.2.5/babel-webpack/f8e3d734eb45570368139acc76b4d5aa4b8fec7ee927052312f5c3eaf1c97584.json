{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TaskTableComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.date);\n  }\n}\nexport class TaskTableComponent {\n  constructor() {\n    this.listTaskToTable = [];\n  }\n  static #_ = this.ɵfac = function TaskTableComponent_Factory(t) {\n    return new (t || TaskTableComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskTableComponent,\n    selectors: [[\"app-task-table\"]],\n    inputs: {\n      listTaskToTable: \"listTaskToTable\"\n    },\n    decls: 15,\n    vars: 1,\n    consts: [[1, \"d-flex\"], [1, \"fw-bold\"], [1, \"table\", \"w-25\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function TaskTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"h3\", 1);\n        i0.ɵɵtext(3, \"Tabela de Log\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"table\", 2)(5, \"thead\")(6, \"tr\")(7, \"th\");\n        i0.ɵɵtext(8, \"Titulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Descri\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Data\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"tbody\");\n        i0.ɵɵtemplate(14, TaskTableComponent_tr_14_Template, 7, 3, \"tr\", 3);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listTaskToTable);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","task_r1","title","description","date","TaskTableComponent","constructor","listTaskToTable","_","_2","selectors","inputs","decls","vars","consts","template","TaskTableComponent_Template","rf","ctx","ɵɵtemplate","TaskTableComponent_tr_14_Template","ɵɵproperty"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-table\\task-table.component.ts","C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-table\\task-table.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Task } from 'src/models/task.model';\n\n@Component({\n  selector: 'app-task-table',\n  templateUrl: './task-table.component.html',\n  styleUrls: ['./task-table.component.scss']\n})\nexport class TaskTableComponent {\n\n  @Input() listTaskToTable: Task[] = []\n\n}\n","<div class=\"d-flex\">\n    <div>\n        <h3 class=\"fw-bold\">Tabela de Log</h3>\n        <table class=\"table w-25\">\n            <thead>\n                <tr>\n                    <th>Titulo</th>\n                    <th>Descrição</th>\n                    <th>Data</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let task of listTaskToTable\">\n                    <td>{{task.title}}</td>\n                    <td>{{task.description}}</td>\n                    <td>{{task.date}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>"],"mappings":";;;;ICYgBA,EAAA,CAAAC,cAAA,SAAyC;IACjCD,EAAA,CAAAE,MAAA,GAAc;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACvBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC7BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAa;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAFlBH,EAAA,CAAAI,SAAA,GAAc;IAAdJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,KAAA,CAAc;IACdP,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAE,WAAA,CAAoB;IACpBR,EAAA,CAAAI,SAAA,GAAa;IAAbJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAG,IAAA,CAAa;;;ADPrC,OAAM,MAAOC,kBAAkB;EAL/BC,YAAA;IAOW,KAAAC,eAAe,GAAW,EAAE;;EAEtC,QAAAC,CAAA,G;qBAJYH,kBAAkB;EAAA;EAAA,QAAAI,EAAA,G;UAAlBJ,kBAAkB;IAAAK,SAAA;IAAAC,MAAA;MAAAJ,eAAA;IAAA;IAAAK,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR/BtB,EAAA,CAAAC,cAAA,aAAoB;QAEQD,EAAA,CAAAE,MAAA,oBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACtCH,EAAA,CAAAC,cAAA,eAA0B;QAGVD,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACfH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,2BAAS;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAClBH,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGrBH,EAAA,CAAAC,cAAA,aAAO;QACHD,EAAA,CAAAwB,UAAA,KAAAC,iCAAA,gBAIK;QACTzB,EAAA,CAAAG,YAAA,EAAQ;;;QALiBH,EAAA,CAAAI,SAAA,IAAkB;QAAlBJ,EAAA,CAAA0B,UAAA,YAAAH,GAAA,CAAAX,eAAA,CAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}