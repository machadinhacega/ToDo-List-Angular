{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TaskListComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.titulo, \" \");\n  }\n}\nexport class TaskListComponent {\n  constructor() {\n    // esses são os parâmetros quee será enviados para os componentes (mandar por import)\n    // a variável 'tasks' é do tipo 'IListTasks\n    // Esse tipo (IListTasks) foi definido e exportado do app.ts\n    this.tasks = [];\n  }\n  teste() {\n    console.log(this.tasks);\n  }\n  static #_ = this.ɵfac = function TaskListComponent_Factory(t) {\n    return new (t || TaskListComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskListComponent,\n    selectors: [[\"app-task-list\"]],\n    inputs: {\n      tasks: \"tasks\"\n    },\n    decls: 7,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function TaskListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"task-list works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"h2\");\n        i0.ɵɵtext(4, \"Tarefas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ul\");\n        i0.ɵɵtemplate(6, TaskListComponent_li_6_Template, 2, 1, \"li\", 0);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","task_r1","titulo","TaskListComponent","constructor","tasks","teste","console","log","_","_2","selectors","inputs","decls","vars","consts","template","TaskListComponent_Template","rf","ctx","ɵɵtemplate","TaskListComponent_li_6_Template","ɵɵproperty"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-list\\task-list.component.ts","C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-list\\task-list.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { IListTask } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss']\n})\nexport class TaskListComponent {\n  // esses são os parâmetros quee será enviados para os componentes (mandar por import)\n  // a variável 'tasks' é do tipo 'IListTasks\n  // Esse tipo (IListTasks) foi definido e exportado do app.ts\n  @ Input() tasks: IListTask[] = []\n\n\n  teste(){\n    console.log(this.tasks)\n  }\n\n\n\n}\n","\n<p>task-list works!</p>\n\n<div>\n    <h2>Tarefas</h2>\n\n    <ul>\n        <li *ngFor=\"let task of tasks\">\n            {{task.titulo}}\n        </li>\n    </ul>\n\n</div>\n\n<!--   (evento) = \"função()\"\"        -->\n<!-- <button (click)=\"teste()\">Mostrar Console</button> -->"],"mappings":";;;;ICOQA,EAAA,CAAAC,cAAA,SAA+B;IAC3BD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IADDH,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAK,kBAAA,MAAAC,OAAA,CAAAC,MAAA,MACJ;;;ADDR,OAAM,MAAOC,iBAAiB;EAL9BC,YAAA;IAME;IACA;IACA;IACU,KAAAC,KAAK,GAAgB,EAAE;;EAGjCC,KAAKA,CAAA;IACHC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,KAAK,CAAC;EACzB;EAAC,QAAAI,CAAA,G;qBATUN,iBAAiB;EAAA;EAAA,QAAAO,EAAA,G;UAAjBP,iBAAiB;IAAAQ,SAAA;IAAAC,MAAA;MAAAP,KAAA;IAAA;IAAAQ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP9BvB,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,uBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAEvBH,EAAA,CAAAC,cAAA,UAAK;QACGD,EAAA,CAAAE,MAAA,cAAO;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAEhBH,EAAA,CAAAC,cAAA,SAAI;QACAD,EAAA,CAAAyB,UAAA,IAAAC,+BAAA,gBAEK;QACT1B,EAAA,CAAAG,YAAA,EAAK;;;QAHoBH,EAAA,CAAAI,SAAA,GAAQ;QAARJ,EAAA,CAAA2B,UAAA,YAAAH,GAAA,CAAAd,KAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}