{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"d-none\": a0\n  };\n};\nfunction TaskListComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"slice\");\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, task_r1.title === \"teste\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.title, \" - \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind3(4, 4, task_r1.description, 0, 4), \" - \", i0.ɵɵpipeBind2(5, 8, task_r1.date, \"dd/MM/yy\"), \" \");\n  }\n}\nexport class TaskListComponent {\n  constructor() {\n    // esses são os parâmetros quee será enviados para os componentes (mandar por import)\n    // a variável 'tasks' é do tipo 'IListTasks\n    // Esse tipo (IListTasks) foi definido e exportado do app.ts\n    this.tasks = [];\n    this.handleTask = new EventEmitter();\n  }\n  teste() {\n    console.log(this.tasks);\n  }\n  // Quando Inicia ESSA aplicação. O task-list\n  ngOnInit() {\n    console.log('Iniciou o task-list');\n    // this.interval = setInterval(() => {\n    //   console.log('segundos');\n    // },1000)\n  }\n\n  ngOnDestroy() {\n    console.log('Fechou o task-list');\n    clearInterval(this.interval);\n  }\n  selectedTask(task) {\n    this.handleTask.emit(task);\n  }\n  static #_ = this.ɵfac = function TaskListComponent_Factory(t) {\n    return new (t || TaskListComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskListComponent,\n    selectors: [[\"app-task-list\"]],\n    inputs: {\n      tasks: \"tasks\"\n    },\n    outputs: {\n      handleTask: \"handleTask\"\n    },\n    decls: 8,\n    vars: 1,\n    consts: [[3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"ngClass\"]],\n    template: function TaskListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Tarefas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, TaskListComponent_div_3_Template, 6, 13, \"div\", 0);\n        i0.ɵɵelementStart(4, \"div\");\n        i0.ɵɵelement(5, \"p\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_6_listener() {\n          return ctx.teste();\n        });\n        i0.ɵɵtext(7, \"Mostrar Console\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.SlicePipe, i1.DatePipe],\n    styles: [\".d-none[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrLWxpc3QvdGFzay1saXN0LmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vLi4vLi4vTWV1JTIwRHJpdmUvYWRhL1NhbnRhbmRlcl9Db2RlcnNfMjAyM19Gcm9udC1FbmQvMDUtQW5ndWxhci1JL2F1bGEwMi90b0xpc3Qvc3JjL2FwcC9jb21wb25lbnRzL3Rhc2stbGlzdC90YXNrLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FDQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuZC1ub25le1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufSIsIi5kLW5vbmUge1xuICBkaXNwbGF5OiBub25lO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","task_r1","title","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵpipeBind3","description","ɵɵpipeBind2","date","TaskListComponent","constructor","tasks","handleTask","teste","console","log","ngOnInit","ngOnDestroy","clearInterval","interval","selectedTask","task","emit","_","_2","selectors","inputs","outputs","decls","vars","consts","template","TaskListComponent_Template","rf","ctx","ɵɵtemplate","TaskListComponent_div_3_Template","ɵɵelement","ɵɵlistener","TaskListComponent_Template_button_click_6_listener"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-list\\task-list.component.ts","C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-list\\task-list.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { IListTask } from 'src/app/app.component';\nimport { Task } from 'src/models/task.model';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss']\n})\nexport class TaskListComponent implements OnInit, OnDestroy {\n  // esses são os parâmetros quee será enviados para os componentes (mandar por import)\n  // a variável 'tasks' é do tipo 'IListTasks\n  // Esse tipo (IListTasks) foi definido e exportado do app.ts\n  @ Input() tasks: IListTask[] = [];\n  @Output() handleTask = new EventEmitter();\n\n  interval: any;\n  \n  teste(){\n    console.log(this.tasks)\n  }\n\n  // Quando Inicia ESSA aplicação. O task-list\n  ngOnInit(){\n    console.log('Iniciou o task-list')\n    // this.interval = setInterval(() => {\n    //   console.log('segundos');\n    // },1000)\n  }\n\n  ngOnDestroy(): void {\n    console.log('Fechou o task-list')\n    clearInterval(this.interval)\n  }\n\n  selectedTask(task: Task){\n    this.handleTask.emit(task)\n  }\n\n}\n","\n\n<div>\n    <h2>Tarefas</h2>\n\n    <div *ngFor=\"let task of tasks\"   [ngClass]=\"{'d-none': task.title === 'teste'}\">\n        <div>\n            {{task.title}} - \n            <!-- {{task.title | currencyFormat: 'BRL' }} -  -->\n            <!-- BRL USD  -->\n            {{task.description | slice: 0:4 }} - \n            {{task.date | date:'dd/MM/yy'}}\n            <!--  COMO FAZER UM IF  -->\n            <!-- <div *ngIf=\"task.title !== 'teste'\">\n                {{task.title}} - {{task.description}} - {{task.date}}\n            </div> -->\n        </div>\n    </div>\n\n    <div>\n        <p></p>\n    </div>\n\n</div>\n\n<!--   (evento) = \"função()\"\"        -->\n<button (click)=\"teste()\">Mostrar Console</button>"],"mappings":"AAAA,SAAoBA,YAAY,QAA0C,eAAe;;;;;;;;;;ICKrFC,EAAA,CAAAC,cAAA,aAAiF;IAEzED,EAAA,CAAAE,MAAA,GACA;IAEAF,EAAA,CAAAE,MAAA,GAEA;;;IAIJF,EAAA,CAAAG,YAAA,EAAM;;;;IAXwBH,EAAA,CAAAI,UAAA,YAAAJ,EAAA,CAAAK,eAAA,KAAAC,GAAA,EAAAC,OAAA,CAAAC,KAAA,cAA8C;IAExER,EAAA,CAAAS,SAAA,GACA;IADAT,EAAA,CAAAU,kBAAA,MAAAH,OAAA,CAAAC,KAAA,QACA;IAEAR,EAAA,CAAAS,SAAA,GAEA;IAFAT,EAAA,CAAAW,kBAAA,MAAAX,EAAA,CAAAY,WAAA,OAAAL,OAAA,CAAAM,WAAA,gBAAAb,EAAA,CAAAc,WAAA,OAAAP,OAAA,CAAAQ,IAAA,mBAEA;;;ADHZ,OAAM,MAAOC,iBAAiB;EAL9BC,YAAA;IAME;IACA;IACA;IACU,KAAAC,KAAK,GAAgB,EAAE;IACvB,KAAAC,UAAU,GAAG,IAAIpB,YAAY,EAAE;;EAIzCqB,KAAKA,CAAA;IACHC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,KAAK,CAAC;EACzB;EAEA;EACAK,QAAQA,CAAA;IACNF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC;IACA;IACA;EACF;;EAEAE,WAAWA,CAAA;IACTH,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjCG,aAAa,CAAC,IAAI,CAACC,QAAQ,CAAC;EAC9B;EAEAC,YAAYA,CAACC,IAAU;IACrB,IAAI,CAACT,UAAU,CAACU,IAAI,CAACD,IAAI,CAAC;EAC5B;EAAC,QAAAE,CAAA,G;qBA5BUd,iBAAiB;EAAA;EAAA,QAAAe,EAAA,G;UAAjBf,iBAAiB;IAAAgB,SAAA;IAAAC,MAAA;MAAAf,KAAA;IAAA;IAAAgB,OAAA;MAAAf,UAAA;IAAA;IAAAgB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP9BxC,EAAA,CAAAC,cAAA,UAAK;QACGD,EAAA,CAAAE,MAAA,cAAO;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAEhBH,EAAA,CAAA0C,UAAA,IAAAC,gCAAA,kBAYM;QAEN3C,EAAA,CAAAC,cAAA,UAAK;QACDD,EAAA,CAAA4C,SAAA,QAAO;QACX5C,EAAA,CAAAG,YAAA,EAAM;QAKVH,EAAA,CAAAC,cAAA,gBAA0B;QAAlBD,EAAA,CAAA6C,UAAA,mBAAAC,mDAAA;UAAA,OAASL,GAAA,CAAArB,KAAA,EAAO;QAAA,EAAC;QAACpB,EAAA,CAAAE,MAAA,sBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QArBxBH,EAAA,CAAAS,SAAA,GAAQ;QAART,EAAA,CAAAI,UAAA,YAAAqC,GAAA,CAAAvB,KAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}