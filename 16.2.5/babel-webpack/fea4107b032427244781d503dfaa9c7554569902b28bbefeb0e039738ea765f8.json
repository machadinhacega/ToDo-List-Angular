{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { Task } from 'src/models/task.model';\nexport let TaskFormComponent = class TaskFormComponent {\n  constructor() {\n    this.addTask = new EventEmitter();\n    this.newTask = new Task();\n  }\n  submitTask(form) {\n    // form é a variavel criada dentro do meu formulario para validar o envio\n    if (!form.valid) return;\n    // como parâmetro da função addTask coloca o valor q quer mandar para o PAI\n    // Quando apertar no botão (submitTask) vai enviar as informações (this.nweTask) pro Pai\n    // {...} >>> pra criar uma referencia pra cada task nova\n    // DE POIS DE REFATORAR UTILIZANDO MODEL, ESSA LINHA FOI ALTERADA (ver linha 25)\n    // this.addTask.emit({...this.newTask}); \n    // NÃO PRECISA DESESTRTURAR POR QUE NAO VAI TER MAIS O PROBLEMA DE REFENCIA COM DO OBJETO\n    this.addTask.emit(this.newTask);\n    this.newTask = new Task();\n    // console.log(this.newTask)\n  }\n};\n\n__decorate([Output()], TaskFormComponent.prototype, \"addTask\", void 0);\nTaskFormComponent = __decorate([Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.scss']\n})], TaskFormComponent);","map":{"version":3,"names":["Component","EventEmitter","Output","Task","TaskFormComponent","constructor","addTask","newTask","submitTask","form","valid","emit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-form\\task-form.component.ts"],"sourcesContent":["import { NgFor } from '@angular/common';\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Task } from 'src/models/task.model';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.scss']\n})\nexport class TaskFormComponent {\n\n  @Output() addTask = new EventEmitter()\n\n  public newTask = new Task();\n\n  submitTask(form: NgForm){\n    // form é a variavel criada dentro do meu formulario para validar o envio\n    if(!form.valid) return\n    \n    // como parâmetro da função addTask coloca o valor q quer mandar para o PAI\n    // Quando apertar no botão (submitTask) vai enviar as informações (this.nweTask) pro Pai\n    // {...} >>> pra criar uma referencia pra cada task nova\n    // DE POIS DE REFATORAR UTILIZANDO MODEL, ESSA LINHA FOI ALTERADA (ver linha 25)\n    // this.addTask.emit({...this.newTask}); \n    // NÃO PRECISA DESESTRTURAR POR QUE NAO VAI TER MAIS O PROBLEMA DE REFENCIA COM DO OBJETO\n    this.addTask.emit(this.newTask);\n    this.newTask = new Task();\n    // console.log(this.newTask)\n  }\n\n}\n"],"mappings":";AACA,SAASA,SAAS,EAAEC,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAE/D,SAASC,IAAI,QAAQ,uBAAuB;AAOrC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAAvBC,YAAA;IAEK,KAAAC,OAAO,GAAG,IAAIL,YAAY,EAAE;IAE/B,KAAAM,OAAO,GAAG,IAAIJ,IAAI,EAAE;EAiB7B;EAfEK,UAAUA,CAACC,IAAY;IACrB;IACA,IAAG,CAACA,IAAI,CAACC,KAAK,EAAE;IAEhB;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,IAAI,CAACJ,OAAO,CAAC;IAC/B,IAAI,CAACA,OAAO,GAAG,IAAIJ,IAAI,EAAE;IACzB;EACF;CAED;;AAnBWS,UAAA,EAATV,MAAM,EAAE,C,iDAA6B;AAF3BE,iBAAiB,GAAAQ,UAAA,EAL7BZ,SAAS,CAAC;EACTa,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWX,iBAAiB,CAqB7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}