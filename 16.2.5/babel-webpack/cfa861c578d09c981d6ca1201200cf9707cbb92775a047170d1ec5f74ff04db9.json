{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class TaskFormComponent {\n  constructor() {\n    this.addTask = new EventEmitter();\n    this.newTask = {\n      title: '',\n      description: '',\n      date: new Date()\n    };\n  }\n  submitTask() {\n    // como parâmetro da função addTask coloca o valor q quer mandar para o PAI\n    // Quando apertar no botão (submitTask) vai enviar as informações (this.nweTask) pro Pai\n    // {...} >>> pra criar uma referencia pra cada task nova\n    this.addTask.emit({\n      ...this.newTask\n    });\n    // console.log(this.newTask)\n  }\n  static #_ = this.ɵfac = function TaskFormComponent_Factory(t) {\n    return new (t || TaskFormComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskFormComponent,\n    selectors: [[\"app-task-form\"]],\n    outputs: {\n      addTask: \"addTask\"\n    },\n    decls: 19,\n    vars: 3,\n    consts: [[\"for\", \"titulo\"], [\"id\", \"titulo\", \"type\", \"text-area\", \"name\", \"titulo\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"description\", \"type\", \"text\", \"name\", \"description\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"date\"], [\"id\", \"date\", \"type\", \"date\", \"name\", \"date\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 3, \"click\"]],\n    template: function TaskFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n        i0.ɵɵtext(2, \"TODO LIST\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\")(4, \"form\")(5, \"div\")(6, \"label\", 0);\n        i0.ɵɵtext(7, \"T\\u00EDtulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function TaskFormComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.newTask.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\", 2);\n        i0.ɵɵtext(11, \"Descri\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function TaskFormComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.newTask.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 4);\n        i0.ɵɵtext(15, \"Data de vencimento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function TaskFormComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.newTask.date = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function TaskFormComponent_Template_button_click_17_listener() {\n          return ctx.submitTask();\n        });\n        i0.ɵɵtext(18, \"Adicionar Tarefa\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTask.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTask.description);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTask.date);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","TaskFormComponent","constructor","addTask","newTask","title","description","date","Date","submitTask","emit","_","_2","selectors","outputs","decls","vars","consts","template","TaskFormComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TaskFormComponent_Template_input_ngModelChange_8_listener","$event","TaskFormComponent_Template_input_ngModelChange_12_listener","TaskFormComponent_Template_input_ngModelChange_16_listener","TaskFormComponent_Template_button_click_17_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-form\\task-form.component.ts","C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-form\\task-form.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.scss']\n})\nexport class TaskFormComponent {\n\n  @Output() addTask = new EventEmitter()\n\n  public newTask = {\n    title: '',\n    description: '',\n    date: new Date()\n  };\n\n  submitTask(){\n    // como parâmetro da função addTask coloca o valor q quer mandar para o PAI\n    // Quando apertar no botão (submitTask) vai enviar as informações (this.nweTask) pro Pai\n    // {...} >>> pra criar uma referencia pra cada task nova\n    this.addTask.emit({...this.newTask}); \n    // console.log(this.newTask)\n  }\n\n}\n","<div>\n    <h1>TODO LIST</h1>\n</div>\n\n<div>\n    <form>\n        <div>\n            <label for=\"titulo\">Título</label>\n            <input id=\"titulo\" type=\"text-area\" name=\"titulo\" [(ngModel)] = \"newTask.title\">\n        </div>\n        <div>\n            <label for=\"description\">Descrição</label>\n            <input id=\"description\" type=\"text\" name=\"description\" [(ngModel)] = \"newTask.description\">\n        </div>\n        <div>\n            <label for=\"date\">Data de vencimento</label>\n            <input id=\"date\" type=\"date\" name=\"date\" [(ngModel)] = \"newTask.date\">\n        </div>\n        <button type=\"button\" (click)=\"submitTask()\" >Adicionar Tarefa</button>\n    </form>\n</div>"],"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;;AAO/D,OAAM,MAAOC,iBAAiB;EAL9BC,YAAA;IAOY,KAAAC,OAAO,GAAG,IAAIH,YAAY,EAAE;IAE/B,KAAAI,OAAO,GAAG;MACfC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,IAAIC,IAAI;KACf;;EAEDC,UAAUA,CAAA;IACR;IACA;IACA;IACA,IAAI,CAACN,OAAO,CAACO,IAAI,CAAC;MAAC,GAAG,IAAI,CAACN;IAAO,CAAC,CAAC;IACpC;EACF;EAAC,QAAAO,CAAA,G;qBAhBUV,iBAAiB;EAAA;EAAA,QAAAW,EAAA,G;UAAjBX,iBAAiB;IAAAY,SAAA;IAAAC,OAAA;MAAAX,OAAA;IAAA;IAAAY,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP9BE,EAAA,CAAAC,cAAA,UAAK;QACGD,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGtBH,EAAA,CAAAC,cAAA,UAAK;QAG2BD,EAAA,CAAAE,MAAA,kBAAM;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAClCH,EAAA,CAAAC,cAAA,eAAgF;QAA9BD,EAAA,CAAAI,UAAA,2BAAAC,0DAAAC,MAAA;UAAA,OAAAP,GAAA,CAAAjB,OAAA,CAAAC,KAAA,GAAAuB,MAAA;QAAA,EAA6B;QAA/EN,EAAA,CAAAG,YAAA,EAAgF;QAEpFH,EAAA,CAAAC,cAAA,UAAK;QACwBD,EAAA,CAAAE,MAAA,2BAAS;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC1CH,EAAA,CAAAC,cAAA,gBAA2F;QAApCD,EAAA,CAAAI,UAAA,2BAAAG,2DAAAD,MAAA;UAAA,OAAAP,GAAA,CAAAjB,OAAA,CAAAE,WAAA,GAAAsB,MAAA;QAAA,EAAmC;QAA1FN,EAAA,CAAAG,YAAA,EAA2F;QAE/FH,EAAA,CAAAC,cAAA,WAAK;QACiBD,EAAA,CAAAE,MAAA,0BAAkB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC5CH,EAAA,CAAAC,cAAA,gBAAsE;QAA7BD,EAAA,CAAAI,UAAA,2BAAAI,2DAAAF,MAAA;UAAA,OAAAP,GAAA,CAAAjB,OAAA,CAAAG,IAAA,GAAAqB,MAAA;QAAA,EAA4B;QAArEN,EAAA,CAAAG,YAAA,EAAsE;QAE1EH,EAAA,CAAAC,cAAA,iBAA8C;QAAxBD,EAAA,CAAAI,UAAA,mBAAAK,oDAAA;UAAA,OAASV,GAAA,CAAAZ,UAAA,EAAY;QAAA,EAAC;QAAEa,EAAA,CAAAE,MAAA,wBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAVjBH,EAAA,CAAAU,SAAA,GAA6B;QAA7BV,EAAA,CAAAW,UAAA,YAAAZ,GAAA,CAAAjB,OAAA,CAAAC,KAAA,CAA6B;QAIxBiB,EAAA,CAAAU,SAAA,GAAmC;QAAnCV,EAAA,CAAAW,UAAA,YAAAZ,GAAA,CAAAjB,OAAA,CAAAE,WAAA,CAAmC;QAIjDgB,EAAA,CAAAU,SAAA,GAA4B;QAA5BV,EAAA,CAAAW,UAAA,YAAAZ,GAAA,CAAAjB,OAAA,CAAAG,IAAA,CAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}