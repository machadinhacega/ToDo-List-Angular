{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction TaskFormReactiveComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 27);\n    i0.ɵɵtext(2, \"Titulo obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskFormReactiveComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 27);\n    i0.ɵɵtext(2, \"Escolha uma op\\u00E7\\u00E3o\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskFormReactiveComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 27);\n    i0.ɵɵtext(2, \"Descri\\u00E7\\u00E3o obrigat\\u00F3ria\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskFormReactiveComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 28);\n    i0.ɵɵtext(2, \"Selecione uma data\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskFormReactiveComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r6 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", i_r6);\n  }\n}\nexport class TaskFormReactiveComponent {\n  // Precisamos de um constructor para injetar uma dependencia, colocar um serviço aqui dentro\n  // \"formBuilder\" poderia ser qualquer nome.\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    // EDITAR\n    this.task = null;\n    // OUTRA FORMA DE INICIAR O EDITAR\n    // @Input() isEdit: boolean = false;\n    // tags: string[] = []\n    this.form = this.formBuilder.group({\n      // o primeiro parametro é o valor inicial do meu input, deposi vêm meus validadores\n      title: ['', Validators.required],\n      // Mais de uma validação:\n      // title: ['', [Validators.required, Validators.email]],\n      description: ['', Validators.required],\n      valor: ['4.20', Validators.required],\n      date: ['', Validators.required],\n      // DATE TEXT\n      // date: ['', [Validators.required, dateLessThanValidator()]],\n      status: ['', Validators.required],\n      // Se tivesse mais um item que carrega um objeto, era so repetir a mesma estrutura. Ex:\n      // endereco: this.formBuilder.group({\n      //    rua: ['', Validators.required],\n      //    cidade: ['', Validators.required],\n      //    estado: ['', Validators.required],\n      // })\n      tags: this.formBuilder.array([])\n      // Validando TAGS nesse nivel, eu estou requerindo que tenha pelo menos 1 item no meu \"tags\" | (ver addTag())\n      // tags: this.formBuilder.array([],Validators.required)\n    });\n\n    this.addTask = new EventEmitter();\n  }\n  get title() {\n    return this.form.get('title');\n  }\n  get myTags() {\n    return this.form.get('tags');\n  }\n  ngOnInit() {\n    // this.form.setValue({title: this.task?.title, \n    //                     description: this.task?.description,\n    //                     valor:this.task?.valor,\n    //                     status:this.task?.status,\n    //                     tags:this.task?.tags,\n    //                     date:this.task?.date,\n    //                   })\n    // this.form.setValue({...this.task})\n    this.form.patchValue({\n      ...this.task\n    });\n    this.task?.tags?.forEach(item => {\n      this.addTag(item);\n    });\n  }\n  submitTask() {\n    // console.log(this.form.value)\n    // console.log('invalid', this.form.invalid)\n    // esse if é para se caso o formulario estaja inválido, nao ir para as linhas de baixo, q sao as linhas q add a task à lista\n    if (this.form.invalid) return;\n    this.addTask.emit(this.form.value);\n    this.form.reset();\n  }\n  addTag(value = '') {\n    // MESMA COISA:\n    // this.form.get('tags')\n    // this.myTags\n    // Validando o formulário nesse nível, estou requerindo que as tags que forem abertas sejam preenchidas com algum texto \n    this.myTags.push(this.formBuilder.control(value, Validators.required));\n  }\n  static #_ = this.ɵfac = function TaskFormReactiveComponent_Factory(t) {\n    return new (t || TaskFormReactiveComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskFormReactiveComponent,\n    selectors: [[\"app-task-form-reactive\"]],\n    inputs: {\n      task: \"task\"\n    },\n    outputs: {\n      addTask: \"addTask\"\n    },\n    decls: 45,\n    vars: 6,\n    consts: [[1, \"d-flex\", \"justify-content-center\", \"mt-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"d-flex\"], [1, \"me-3\"], [\"for\", \"titulo\", 1, \"d-block\"], [\"id\", \"titulo\", \"type\", \"text\", \"name\", \"titulo\", \"formControlName\", \"title\", 1, \"h-25\", \"py-3\", \"rounded-2\", \"border-1\", \"ps-2\", \"text-dark\"], [4, \"ngIf\"], [\"for\", \"status\", 1, \"d-block\"], [\"id\", \"status\", \"name\", \"status\", \"formControlName\", \"status\", 1, \"py-1\", \"rounded-2\", \"border-1\", \"ps-2\", \"text-dark\"], [\"value\", \"default\", \"disabled\", \"\", \"selected\", \"\"], [\"value\", \"toDO\"], [\"value\", \"doing\"], [\"value\", \"done\"], [1, \"\"], [\"for\", \"valor\", 1, \"d-block\"], [1, \"ms-1\", \"text-body-tertiary\"], [\"id\", \"valor\", \"type\", \"number\", \"name\", \"valor\", \"formControlName\", \"valor\", 1, \"h-25\", \"py-2\", \"rounded-2\", \"border-1\", \"ps-2\", \"text-dark\", \"mb-4\", \"w-100\"], [\"for\", \"description\", 1, \"d-block\"], [\"id\", \"description\", \"name\", \"description\", \"formControlName\", \"description\", 1, \"w-100\", \"rounded-2\", \"border-1\", \"ps-2\", \"py-2\", \"text-dark\", 2, \"resize\", \"none\"], [1, \"d-flex\", \"align-items-center\", \"mt-2\"], [\"for\", \"date\", 1, \"me-2\", \"w-50\"], [\"id\", \"date\", \"type\", \"date\", \"name\", \"date\", \"formControlName\", \"date\", 1, \"rounded-2\", \"border-1\", \"py-2\", \"ps-2\", \"w-50\"], [\"formArrayName\", \"tags\", 1, \"mt-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", \"fw-medium\", \"py-1\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-end\", \"mt-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\"], [1, \"mb-0\", \"text-danger\"], [1, \"text-end\", \"mb-0\", \"text-danger\"], [\"id\", \"tags\", \"type\", \"text\", \"name\", \"tags\", \"placeholder\", \"insira uma tag\", 1, \"rounded-2\", \"border-1\", \"ps-2\", \"mt-2\", 3, \"formControlName\"]],\n    template: function TaskFormReactiveComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function TaskFormReactiveComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.submitTask();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"T\\u00EDtulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵtemplate(7, TaskFormReactiveComponent_div_7_Template, 3, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\")(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 8)(12, \"option\", 9);\n        i0.ɵɵtext(13, \"Selecione uma op\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 10);\n        i0.ɵɵtext(15, \"toDo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 11);\n        i0.ɵɵtext(17, \"Doing\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 12);\n        i0.ɵɵtext(19, \"Done\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, TaskFormReactiveComponent_div_20_Template, 3, 0, \"div\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 13)(22, \"label\", 14);\n        i0.ɵɵtext(23, \"Pipe moeda: \");\n        i0.ɵɵelementStart(24, \"span\", 15);\n        i0.ɵɵtext(25, \"*n\\u00E3o obrigat\\u00F3rio\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(26, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\")(28, \"label\", 17);\n        i0.ɵɵtext(29, \"Descri\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\");\n        i0.ɵɵelement(31, \"textarea\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(32, TaskFormReactiveComponent_div_32_Template, 3, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 19)(34, \"label\", 20);\n        i0.ɵɵtext(35, \"Data de entrega da tarefa:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(37, TaskFormReactiveComponent_div_37_Template, 3, 0, \"div\", 6);\n        i0.ɵɵelementStart(38, \"div\", 22)(39, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function TaskFormReactiveComponent_Template_button_click_39_listener() {\n          return ctx.addTag();\n        });\n        i0.ɵɵtext(40, \"+ tag\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(41, TaskFormReactiveComponent_div_41_Template, 2, 1, \"div\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 25)(43, \"button\", 26);\n        i0.ɵɵtext(44, \"Adicionar Tarefa\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (ctx.title == null ? null : ctx.title.hasError(\"required\")) && ((tmp_1_0 = ctx.form.get(\"title\")) == null ? null : tmp_1_0.touched));\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.form.get(\"status\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx.form.get(\"status\")) == null ? null : tmp_2_0.touched));\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.form.get(\"description\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.form.get(\"description\")) == null ? null : tmp_3_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.form.get(\"date\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.form.get(\"date\")) == null ? null : tmp_4_0.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.myTags.controls);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","i_r6","TaskFormReactiveComponent","constructor","formBuilder","task","form","group","title","required","description","valor","date","status","tags","array","addTask","get","myTags","ngOnInit","patchValue","forEach","item","addTag","submitTask","invalid","emit","value","reset","push","control","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","inputs","outputs","decls","vars","consts","template","TaskFormReactiveComponent_Template","rf","ctx","ɵɵlistener","TaskFormReactiveComponent_Template_form_ngSubmit_1_listener","ɵɵtemplate","TaskFormReactiveComponent_div_7_Template","TaskFormReactiveComponent_div_20_Template","TaskFormReactiveComponent_div_32_Template","TaskFormReactiveComponent_div_37_Template","TaskFormReactiveComponent_Template_button_click_39_listener","TaskFormReactiveComponent_div_41_Template","hasError","tmp_1_0","touched","tmp_2_0","tmp_3_0","tmp_4_0","controls"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-form-reactive\\task-form-reactive.component.ts","C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-form-reactive\\task-form-reactive.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { dateLessThanValidator } from 'src/app/validators/dateLessThan.validator';\nimport { Task } from 'src/models/task.model';\n\n@Component({\n  selector: 'app-task-form-reactive',\n  templateUrl: './task-form-reactive.component.html',\n  styleUrls: ['./task-form-reactive.component.scss']\n})\nexport class TaskFormReactiveComponent implements OnInit {\n\n  // EDITAR\n  @Input() task: Task | null = null\n  \n  // OUTRA FORMA DE INICIAR O EDITAR\n  // @Input() isEdit: boolean = false;\n\n  // tags: string[] = []\n\n  public form: FormGroup = this.formBuilder.group({\n    // o primeiro parametro é o valor inicial do meu input, deposi vêm meus validadores\n    title: ['', Validators.required],\n    // Mais de uma validação:\n    // title: ['', [Validators.required, Validators.email]],\n    description: ['', Validators.required],\n    valor: ['4.20', Validators.required],\n    date: ['', Validators.required],\n    // DATE TEXT\n    // date: ['', [Validators.required, dateLessThanValidator()]],\n    status: ['', Validators.required],\n    // Se tivesse mais um item que carrega um objeto, era so repetir a mesma estrutura. Ex:\n    // endereco: this.formBuilder.group({\n    //    rua: ['', Validators.required],\n    //    cidade: ['', Validators.required],\n    //    estado: ['', Validators.required],\n    // })\n    tags: this.formBuilder.array([])\n    // Validando TAGS nesse nivel, eu estou requerindo que tenha pelo menos 1 item no meu \"tags\" | (ver addTag())\n    // tags: this.formBuilder.array([],Validators.required)\n  })\n\n\n  @Output() addTask = new EventEmitter()\n\n\n  // Precisamos de um constructor para injetar uma dependencia, colocar um serviço aqui dentro\n  // \"formBuilder\" poderia ser qualquer nome.\n  constructor(private formBuilder: FormBuilder){}\n\n  get title(){\n    return this.form.get('title')\n  }\n\n  get myTags(){   // Esta buscando todos meus arrays\n    return this.form.get('tags') as FormArray;\n  }\n\n\n\n  ngOnInit(){\n    // this.form.setValue({title: this.task?.title, \n    //                     description: this.task?.description,\n    //                     valor:this.task?.valor,\n    //                     status:this.task?.status,\n    //                     tags:this.task?.tags,\n    //                     date:this.task?.date,\n    //                   })\n    \n    // this.form.setValue({...this.task})\n\n    this.form.patchValue({...this.task})\n\n    this.task?.tags?.forEach(item =>{\n      this.addTag(item)\n    })\n\n\n\n  }\n\n\n\n  submitTask(){\n    // console.log(this.form.value)\n    // console.log('invalid', this.form.invalid)\n\n    // esse if é para se caso o formulario estaja inválido, nao ir para as linhas de baixo, q sao as linhas q add a task à lista\n    if (this.form.invalid) return\n\n    this.addTask.emit(this.form.value);\n    this.form.reset()\n    \n  }\n\n  addTag(value = ''){\n    // MESMA COISA:\n    // this.form.get('tags')\n    // this.myTags\n    \n    // Validando o formulário nesse nível, estou requerindo que as tags que forem abertas sejam preenchidas com algum texto \n    this.myTags.push(this.formBuilder.control(value, Validators.required))\n  }\n\n\n\n  // onEditTask(tasks){\n  //   console.log('')\n  // }\n}\n","<div class=\"d-flex justify-content-center mt-4\">\n    <!-- vamos usar uma property binding -->\n    <!-- esse \"form\" é a variável publica que criamos no form-reactive.ts -->\n    <form [formGroup]=\"form\" (ngSubmit)=\"submitTask()\">\n        <!-- OPÇÂO SUBMIT2: passando um ngSubmit que é acionado qndo clica no submt do form e chama uma função -->\n\n        <div class=\"d-flex\">\n            <div class=\"me-3\">\n                <label for=\"titulo\" class=\"d-block\">Título</label>\n                <input \n                id=\"titulo\"\n                type=\"text\" \n                name=\"titulo\" \n                class=\"h-25 py-3 rounded-2 border-1 ps-2 text-dark\"\n                formControlName=\"title\"\n                >\n                <!-- <p class=\"mb-0 text-danger\">{{}}</p> -->\n                <!-- hasError especifica qual o erro que quero pegar -->\n                <!-- esta usando so \"title\" pq nesse caso aqui esse \"title\" é um get feito no nosso ts -->\n                <div *ngIf=\"title?.hasError('required') && form.get('title')?.touched\">\n                    <p class=\"mb-0 text-danger\">Titulo obrigatório</p>\n                </div>\n                <!-- hasError especifica qual o erro que quero pegar -->\n                <!-- <div *ngIf=\"form.get('title')?.hasError('min')\">\n                    <p class=\"mb-0 text-danger\">Nome precisa ter mais de 3 letras</p>\n                </div> -->\n\n            </div>\n            \n            <div>\n                <label for=\"status\" class=\"d-block\">Status</label>\n                <select \n                id=\"status\"\n                name=\"status\" \n                class=\" py-1 rounded-2 border-1 ps-2 text-dark\"\n                formControlName=\"status\"\n                >\n                    <option value=\"default\" disabled selected>Selecione uma opção</option>\n                    <option value=\"toDO\" >toDo</option>\n                    <option value=\"doing\" >Doing</option>\n                    <option value=\"done\" >Done</option>\n                </select>\n\n                <div *ngIf=\"form.get('status')?.hasError('required') && form.get('status')?.touched\">\n                    <p class=\"mb-0 text-danger\">Escolha uma opção</p>\n                </div>\n\n\n            </div>\n        </div>\n\n        <div class=\"\">\n            <label for=\"valor\" class=\"d-block\">Pipe moeda: <span class=\"ms-1 text-body-tertiary\">*não obrigatório</span> </label>\n            <input \n            id=\"valor\"\n            type=\"number\" \n            name=\"valor\" \n            class=\"h-25 py-2 rounded-2 border-1 ps-2 text-dark mb-4 w-100\"\n            formControlName=\"valor\">\n        </div>\n\n\n        <div>\n            <label for=\"description\" class=\"d-block\">Descrição</label>\n            <div><textarea  style=\"resize: none\" \n                id=\"description\"\n                name=\"description\" \n                class=\"w-100 rounded-2 border-1 ps-2 py-2 text-dark\" \n                formControlName=\"description\"\n                ></textarea></div>\n\n                <div *ngIf=\"form.get('description')?.invalid && form.get('description')?.touched\">\n                    <p class=\"mb-0 text-danger\">Descrição obrigatória</p>\n                </div>\n\n\n        </div>\n\n        <!-- DATE DATE -->\n        <div class=\"d-flex align-items-center mt-2\">\n            <label for=\"date\" class=\"me-2 w-50\">Data de entrega da tarefa:</label>\n            <input \n            id=\"date\" \n            type=\"date\" \n            name=\"date\" \n            class=\"rounded-2 border-1 py-2 ps-2 w-50\"\n            formControlName=\"date\">    \n        </div>       \n        <div *ngIf=\"form.get('date')?.invalid && form.get('date')?.touched\">\n            <p class=\"text-end mb-0 text-danger\">Selecione uma data</p>    \n        </div>\n     \n        <!-- DATE TEXT -->\n        <!-- <div class=\"d-flex align-items-center mt-2\">\n            <label for=\"date\" class=\"me-2 w-50\">Data de entrega da tarefa:</label>\n            <input \n            id=\"date\" \n            type=\"text\" \n            appDateMask\n            name=\"date\" \n            class=\"rounded-2 border-1 py-2 ps-2 w-50\"\n            formControlName=\"date\">    \n        </div>       \n        <div *ngIf=\"form.get('date')?.hasError('required') && form.get('date')?.touched\">\n            <p class=\"text-end mb-0 text-danger\">Selecione uma data</p>    \n        </div>\n        <div *ngIf=\"form.get('date')?.hasError('dateLessThan') && form.get('date')?.touched\">\n            <p class=\"text-end mb-0 text-danger\">A data precisa ser posterior ao dia de hoje</p>    \n        </div> -->\n\n        <!-- TAGS -->\n        <div class=\"mt-3\" formArrayName=\"tags\">\n            <button type=\"button\" (click)=\"addTag()\" class=\"btn btn-warning fw-medium py-1 \">+ tag</button>\n                                                    <!--  Pegando o index no ngFor -->\n            <div *ngFor=\"let tag of myTags.controls; let i = index\">\n                <!-- <label for=\"tags\">Nome:</label> -->\n                <!-- {{i}} -->\n                <input \n                id=\"tags\" \n                type=\"text\" \n                name=\"tags\" \n                class=\"rounded-2 border-1 ps-2 mt-2\" \n                placeholder=\"insira uma tag\" \n                [formControlName] = \"i\" >\n                <!-- POr tras dos panos esta fazendo isso: formControlName = tags[i]  -->\n           </div>\n        </div>\n\n\n        <div class=\"text-end mt-4\">\n            <!-- OPÇÂO SUBMIT 1:  chamando a função por um click -->\n            <!-- <button type=\"button\" (click)=\"submitTask()\" class=\"btn btn-primary\" >Adicionar Tarefa</button> -->\n            <button type=\"submit\"  class=\"btn btn-dark\" >Adicionar Tarefa</button>\n        </div>\n    </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}