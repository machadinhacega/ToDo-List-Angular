{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction TaskFormReactiveComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 20);\n    i0.ɵɵtext(2, \"Nome obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskFormReactiveComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 20);\n    i0.ɵɵtext(2, \"Escolha uma op\\u00E7\\u00E3o\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskFormReactiveComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 20);\n    i0.ɵɵtext(2, \"Descri\\u00E7\\u00E3o obrigat\\u00F3ria\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskFormReactiveComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 21);\n    i0.ɵɵtext(2, \"Selecione uma data\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class TaskFormReactiveComponent {\n  // Precisamos de um constructor para injetar uma dependencia, colocar um serviço aqui dentro\n  // \"formBuilder\" poderia ser qualquer nome.\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.form = this.formBuilder.group({\n      // o primeiro parametro é o valor inicial do meu input, deposi vêm meus validadores\n      title: ['', Validators.required],\n      // Mais de uma validação:\n      // title: ['', [Validators.required, Validators.email]],\n      description: ['', Validators.required],\n      date: ['', Validators.required],\n      status: ['', Validators.required]\n      // Se tivesse mais um item que carrega um objeto, era so repetir a mesma estrutura. Ex:\n      // endereco: this.formBuilder.group({\n      //    rua: ['', Validators.required],\n      //    cidade: ['', Validators.required],\n      //    estado: ['', Validators.required],\n      // })\n    });\n\n    this.addTask = new EventEmitter();\n  }\n  submitTask() {\n    // esse if é para se caso o formulario estaja inválido, nao ir para as linhas de baixo, q sao as linhas q add a task à lista\n    if (this.form.invalid) return;\n    this.addTask.emit(this.form.value);\n    this.form.reset();\n  }\n  static #_ = this.ɵfac = function TaskFormReactiveComponent_Factory(t) {\n    return new (t || TaskFormReactiveComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskFormReactiveComponent,\n    selectors: [[\"app-task-form-reactive\"]],\n    outputs: {\n      addTask: \"addTask\"\n    },\n    decls: 35,\n    vars: 5,\n    consts: [[1, \"d-flex\", \"justify-content-center\", \"mt-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"d-flex\"], [1, \"me-3\"], [\"for\", \"titulo\", 1, \"d-block\"], [\"id\", \"titulo\", \"type\", \"text\", \"name\", \"titulo\", \"formControlName\", \"title\", 1, \"h-25\", \"py-3\", \"rounded-2\", \"border-1\", \"ps-2\", \"text-dark\"], [4, \"ngIf\"], [\"for\", \"status\", 1, \"d-block\"], [\"id\", \"status\", \"name\", \"status\", \"formControlName\", \"status\", 1, \"py-1\", \"rounded-2\", \"border-1\", \"ps-2\", \"text-dark\"], [\"value\", \"default\", \"disabled\", \"\", \"selected\", \"\"], [\"value\", \"toDO\"], [\"value\", \"doing\"], [\"value\", \"done\"], [\"for\", \"description\", 1, \"d-block\"], [\"id\", \"description\", \"name\", \"description\", \"formControlName\", \"description\", 1, \"w-100\", \"rounded-2\", \"border-1\", \"ps-2\", \"py-2\", \"text-dark\", 2, \"resize\", \"none\"], [1, \"d-flex\", \"align-items-center\", \"mt-2\"], [\"for\", \"date\", 1, \"me-2\", \"w-50\"], [\"id\", \"date\", \"type\", \"date\", \"name\", \"date\", \"formControlName\", \"date\", 1, \"rounded-2\", \"border-1\", \"py-2\", \"ps-2\", \"w-50\"], [1, \"text-end\", \"mt-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"mb-0\", \"text-danger\"], [1, \"text-end\", \"mb-0\", \"text-danger\"]],\n    template: function TaskFormReactiveComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function TaskFormReactiveComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.submitTask();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"T\\u00EDtulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵtemplate(7, TaskFormReactiveComponent_div_7_Template, 3, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\")(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 8)(12, \"option\", 9);\n        i0.ɵɵtext(13, \"Selecione uma op\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 10);\n        i0.ɵɵtext(15, \"toDo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 11);\n        i0.ɵɵtext(17, \"Doing\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 12);\n        i0.ɵɵtext(19, \"Done\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, TaskFormReactiveComponent_div_20_Template, 3, 0, \"div\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\")(22, \"label\", 13);\n        i0.ɵɵtext(23, \"Descri\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\");\n        i0.ɵɵelement(25, \"textarea\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, TaskFormReactiveComponent_div_26_Template, 3, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 15)(28, \"label\", 16);\n        i0.ɵɵtext(29, \"Data de entrega da tarefa:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, TaskFormReactiveComponent_div_31_Template, 3, 0, \"div\", 6);\n        i0.ɵɵelementStart(32, \"div\", 18)(33, \"button\", 19);\n        i0.ɵɵtext(34, \"Adicionar Tarefa\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.form.get(\"title\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx.form.get(\"title\")) == null ? null : tmp_1_0.touched));\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.form.get(\"status\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.form.get(\"status\")) == null ? null : tmp_2_0.touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.form.get(\"description\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.form.get(\"description\")) == null ? null : tmp_3_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.form.get(\"date\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.form.get(\"date\")) == null ? null : tmp_4_0.touched));\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","TaskFormReactiveComponent","constructor","formBuilder","form","group","title","required","description","date","status","addTask","submitTask","invalid","emit","value","reset","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","outputs","decls","vars","consts","template","TaskFormReactiveComponent_Template","rf","ctx","ɵɵlistener","TaskFormReactiveComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵtemplate","TaskFormReactiveComponent_div_7_Template","TaskFormReactiveComponent_div_20_Template","TaskFormReactiveComponent_div_26_Template","TaskFormReactiveComponent_div_31_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","hasError","touched","tmp_2_0","tmp_3_0","tmp_4_0"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-form-reactive\\task-form-reactive.component.ts","C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\components\\task-form-reactive\\task-form-reactive.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Task } from 'src/models/task.model';\n\n@Component({\n  selector: 'app-task-form-reactive',\n  templateUrl: './task-form-reactive.component.html',\n  styleUrls: ['./task-form-reactive.component.scss']\n})\nexport class TaskFormReactiveComponent {\n\n  public form: FormGroup = this.formBuilder.group({\n    // o primeiro parametro é o valor inicial do meu input, deposi vêm meus validadores\n    title: ['', Validators.required],\n    // Mais de uma validação:\n    // title: ['', [Validators.required, Validators.email]],\n    description: ['', Validators.required],\n    date: ['', Validators.required],\n    status: ['', Validators.required],\n    // Se tivesse mais um item que carrega um objeto, era so repetir a mesma estrutura. Ex:\n    // endereco: this.formBuilder.group({\n    //    rua: ['', Validators.required],\n    //    cidade: ['', Validators.required],\n    //    estado: ['', Validators.required],\n    // })\n  })\n\n\n  @Output() addTask = new EventEmitter()\n\n\n  // Precisamos de um constructor para injetar uma dependencia, colocar um serviço aqui dentro\n  // \"formBuilder\" poderia ser qualquer nome.\n  constructor(private formBuilder: FormBuilder){}\n\n\n  submitTask(){\n    \n    // esse if é para se caso o formulario estaja inválido, nao ir para as linhas de baixo, q sao as linhas q add a task à lista\n    if (this.form.invalid) return\n\n    this.addTask.emit(this.form.value);\n    \n    this.form.reset()\n    \n  }\n}\n","<div class=\"d-flex justify-content-center mt-4\">\n    <!-- vamos usar uma property binding -->\n    <!-- esse \"form\" é a variável publica que criamos no form-reactive.ts -->\n    <form [formGroup]=\"form\" (ngSubmit)=\"submitTask()\">\n        <!-- OPÇÂO SUBMIT2: passando um ngSubmit que é acionado qndo clica no submt do form e chama uma função -->\n\n        <div class=\"d-flex\">\n            <div class=\"me-3\">\n                <label for=\"titulo\" class=\"d-block\">Título</label>\n                <input \n                id=\"titulo\"\n                type=\"text\" \n                name=\"titulo\" \n                class=\"h-25 py-3 rounded-2 border-1 ps-2 text-dark\"\n                formControlName=\"title\"\n                >\n                <!-- hasError especifica qual o erro que quero pegar -->\n                <div *ngIf=\"form.get('title')?.hasError('required') && form.get('title')?.touched\">\n                    <p class=\"mb-0 text-danger\">Nome obrigatório</p>\n                </div>\n\n            </div>\n            \n            <div>\n                <label for=\"status\" class=\"d-block\">Status</label>\n                <select \n                id=\"status\"\n                name=\"status\" \n                class=\" py-1 rounded-2 border-1 ps-2 text-dark\"\n                formControlName=\"status\"\n                >\n                    <option value=\"default\" disabled selected>Selecione uma opção</option>\n                    <option value=\"toDO\" >toDo</option>\n                    <option value=\"doing\" >Doing</option>\n                    <option value=\"done\" >Done</option>\n                </select>\n\n                <div *ngIf=\"form.get('status')?.invalid && form.get('status')?.touched\">\n                    <p class=\"mb-0 text-danger\">Escolha uma opção</p>\n                </div>\n\n\n            </div>\n        </div>\n        <div>\n            <label for=\"description\" class=\"d-block\">Descrição</label>\n            <div><textarea  style=\"resize: none\" \n                id=\"description\"\n                name=\"description\" \n                class=\"w-100 rounded-2 border-1 ps-2 py-2 text-dark\" \n                formControlName=\"description\"\n                ></textarea></div>\n\n                <div *ngIf=\"form.get('description')?.invalid && form.get('description')?.touched\">\n                    <p class=\"mb-0 text-danger\">Descrição obrigatória</p>\n                </div>\n\n\n        </div>\n        <!-- <div class=\"d-flex align-items-center mt-2\">\n            <label for=\"date\" class=\"me-2 w-50\">Data de entrega da tarefa:</label>\n            <input \n            id=\"date\" \n            type=\"date\" \n            name=\"date\" \n            class=\"rounded-2 border-1 py-2 ps-2 w-50\"\n            formControlName=\"date\">    \n        </div>       \n        <div *ngIf=\"form.get('date')?.invalid && form.get('date')?.touched\">\n            <p class=\"text-end mb-0 text-danger\">Selecione uma data</p>    \n        </div> -->\n        <div class=\"d-flex align-items-center mt-2\">\n            <label for=\"date\" class=\"me-2 w-50\">Data de entrega da tarefa:</label>\n            <input \n            id=\"date\" \n            type=\"date\" \n            name=\"date\" \n            class=\"rounded-2 border-1 py-2 ps-2 w-50\"\n            formControlName=\"date\">    \n        </div>       \n        <div *ngIf=\"form.get('date')?.invalid && form.get('date')?.touched\">\n            <p class=\"text-end mb-0 text-danger\">Selecione uma data</p>    \n        </div>\n\n\n        <div class=\"text-end mt-4\">\n            <!-- OPÇÂO SUBMIT 1:  chamando a função por um click -->\n            <!-- <button type=\"button\" (click)=\"submitTask()\" class=\"btn btn-primary\" >Adicionar Tarefa</button> -->\n            <button type=\"submit\"  class=\"btn btn-primary\" >Adicionar Tarefa</button>\n        </div>\n    </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}