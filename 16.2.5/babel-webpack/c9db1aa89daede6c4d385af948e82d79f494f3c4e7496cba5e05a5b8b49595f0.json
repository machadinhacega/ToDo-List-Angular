{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CurrencyFormatPipe {\n  transform(value, currencyCode = 'BRL') {\n    console.log(value, currencyCode);\n    const formatedValue = Number(value).toLocaleString('pt-BR', {\n      style: 'currency',\n      currency: currencyCode,\n      minimumFractionDigits: 2\n    });\n    return formatedValue;\n  }\n  static #_ = this.ɵfac = function CurrencyFormatPipe_Factory(t) {\n    return new (t || CurrencyFormatPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"currencyFormat\",\n    type: CurrencyFormatPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["CurrencyFormatPipe","transform","value","currencyCode","console","log","formatedValue","Number","toLocaleString","style","currency","minimumFractionDigits","_","_2","pure"],"sources":["C:\\Users\\izavm\\Meu Drive\\ada\\Santander_Coders_2023_Front-End\\05-Angular-I\\aula02\\toList\\src\\app\\pipes\\currency-format.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'currencyFormat'\n})\nexport class CurrencyFormatPipe implements PipeTransform {\n\n  transform(value: string, currencyCode: string = 'BRL'): unknown {\n    console.log(value, currencyCode)\n    const formatedValue = Number(value).  toLocaleString('pt-BR',{\n      style: 'currency',\n      currency: currencyCode,\n      minimumFractionDigits:2,\n    })\n    return formatedValue;\n  }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,kBAAkB;EAE7BC,SAASA,CAACC,KAAa,EAAEC,YAAA,GAAuB,KAAK;IACnDC,OAAO,CAACC,GAAG,CAACH,KAAK,EAAEC,YAAY,CAAC;IAChC,MAAMG,aAAa,GAAGC,MAAM,CAACL,KAAK,CAAC,CAAGM,cAAc,CAAC,OAAO,EAAC;MAC3DC,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAEP,YAAY;MACtBQ,qBAAqB,EAAC;KACvB,CAAC;IACF,OAAOL,aAAa;EACtB;EAAC,QAAAM,CAAA,G;qBAVUZ,kBAAkB;EAAA;EAAA,QAAAa,EAAA,G;;UAAlBb,kBAAkB;IAAAc,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}